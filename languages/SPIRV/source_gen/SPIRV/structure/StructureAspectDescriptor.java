package SPIRV.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAnnotationInstruction = createDescriptorForAnnotationInstruction();
  /*package*/ final ConceptDescriptor myConceptBackEdge = createDescriptorForBackEdge();
  /*package*/ final ConceptDescriptor myConceptBackEdgeBlock = createDescriptorForBackEdgeBlock();
  /*package*/ final ConceptDescriptor myConceptBlock = createDescriptorForBlock();
  /*package*/ final ConceptDescriptor myConceptBlockTerminationInstruction = createDescriptorForBlockTerminationInstruction();
  /*package*/ final ConceptDescriptor myConceptBranchEdge = createDescriptorForBranchEdge();
  /*package*/ final ConceptDescriptor myConceptBranchInstruction = createDescriptorForBranchInstruction();
  /*package*/ final ConceptDescriptor myConceptByte = createDescriptorForByte();
  /*package*/ final ConceptDescriptor myConceptCallableDataKHR = createDescriptorForCallableDataKHR();
  /*package*/ final ConceptDescriptor myConceptCallableDataNV = createDescriptorForCallableDataNV();
  /*package*/ final ConceptDescriptor myConceptCapabiiltySampleRateShading = createDescriptorForCapabiiltySampleRateShading();
  /*package*/ final ConceptDescriptor myConceptCapabiityAtomicInt64 = createDescriptorForCapabiityAtomicInt64();
  /*package*/ final ConceptDescriptor myConceptCapabiityGenericPointer = createDescriptorForCapabiityGenericPointer();
  /*package*/ final ConceptDescriptor myConceptCapabiityImageRect = createDescriptorForCapabiityImageRect();
  /*package*/ final ConceptDescriptor myConceptCapabiityInputAttachment = createDescriptorForCapabiityInputAttachment();
  /*package*/ final ConceptDescriptor myConceptCapabilithyAtomicInt16 = createDescriptorForCapabilithyAtomicInt16();
  /*package*/ final ConceptDescriptor myConceptCapability = createDescriptorForCapability();
  /*package*/ final ConceptDescriptor myConceptCapabilityAddresses = createDescriptorForCapabilityAddresses();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicFloat32Add = createDescriptorForCapabilityAtomicFloat32Add();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicFloat32MinMax = createDescriptorForCapabilityAtomicFloat32MinMax();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicFloat64Add = createDescriptorForCapabilityAtomicFloat64Add();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicFloat64MinMax = createDescriptorForCapabilityAtomicFloat64MinMax();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicInt32 = createDescriptorForCapabilityAtomicInt32();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicInt8 = createDescriptorForCapabilityAtomicInt8();
  /*package*/ final ConceptDescriptor myConceptCapabilityAtomicStorage = createDescriptorForCapabilityAtomicStorage();
  /*package*/ final ConceptDescriptor myConceptCapabilityClipDistance = createDescriptorForCapabilityClipDistance();
  /*package*/ final ConceptDescriptor myConceptCapabilityCullDistance = createDescriptorForCapabilityCullDistance();
  /*package*/ final ConceptDescriptor myConceptCapabilityDerivativeControl = createDescriptorForCapabilityDerivativeControl();
  /*package*/ final ConceptDescriptor myConceptCapabilityDeviceEnqueue = createDescriptorForCapabilityDeviceEnqueue();
  /*package*/ final ConceptDescriptor myConceptCapabilityDeviceGroup = createDescriptorForCapabilityDeviceGroup();
  /*package*/ final ConceptDescriptor myConceptCapabilityFloat16 = createDescriptorForCapabilityFloat16();
  /*package*/ final ConceptDescriptor myConceptCapabilityFloat16Buffer = createDescriptorForCapabilityFloat16Buffer();
  /*package*/ final ConceptDescriptor myConceptCapabilityFloat64 = createDescriptorForCapabilityFloat64();
  /*package*/ final ConceptDescriptor myConceptCapabilityGenericPointer = createDescriptorForCapabilityGenericPointer();
  /*package*/ final ConceptDescriptor myConceptCapabilityGeometry = createDescriptorForCapabilityGeometry();
  /*package*/ final ConceptDescriptor myConceptCapabilityGeometryPointSize = createDescriptorForCapabilityGeometryPointSize();
  /*package*/ final ConceptDescriptor myConceptCapabilityGeometryStreams = createDescriptorForCapabilityGeometryStreams();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroupNonUniform = createDescriptorForCapabilityGroupNonUniform();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroupNonUniformBallot = createDescriptorForCapabilityGroupNonUniformBallot();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroupNonUniformRelative = createDescriptorForCapabilityGroupNonUniformRelative();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroupNonUniformShuffle = createDescriptorForCapabilityGroupNonUniformShuffle();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroupNonUniformShuffleRelative = createDescriptorForCapabilityGroupNonUniformShuffleRelative();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroupNonUniformVote = createDescriptorForCapabilityGroupNonUniformVote();
  /*package*/ final ConceptDescriptor myConceptCapabilityGroups = createDescriptorForCapabilityGroups();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageBasic = createDescriptorForCapabilityImageBasic();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageBuffer = createDescriptorForCapabilityImageBuffer();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageCubeArray = createDescriptorForCapabilityImageCubeArray();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageGatherExtended = createDescriptorForCapabilityImageGatherExtended();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageMSArray = createDescriptorForCapabilityImageMSArray();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageMipmap = createDescriptorForCapabilityImageMipmap();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageReadWithoutFormat = createDescriptorForCapabilityImageReadWithoutFormat();
  /*package*/ final ConceptDescriptor myConceptCapabilityImageReadWrite = createDescriptorForCapabilityImageReadWrite();
  /*package*/ final ConceptDescriptor myConceptCapabilityInputAttachment = createDescriptorForCapabilityInputAttachment();
  /*package*/ final ConceptDescriptor myConceptCapabilityInt16 = createDescriptorForCapabilityInt16();
  /*package*/ final ConceptDescriptor myConceptCapabilityInt64 = createDescriptorForCapabilityInt64();
  /*package*/ final ConceptDescriptor myConceptCapabilityInt64Atomics = createDescriptorForCapabilityInt64Atomics();
  /*package*/ final ConceptDescriptor myConceptCapabilityInt8 = createDescriptorForCapabilityInt8();
  /*package*/ final ConceptDescriptor myConceptCapabilityInterpolationFunction = createDescriptorForCapabilityInterpolationFunction();
  /*package*/ final ConceptDescriptor myConceptCapabilityKernel = createDescriptorForCapabilityKernel();
  /*package*/ final ConceptDescriptor myConceptCapabilityLinkage = createDescriptorForCapabilityLinkage();
  /*package*/ final ConceptDescriptor myConceptCapabilityLiteralSampler = createDescriptorForCapabilityLiteralSampler();
  /*package*/ final ConceptDescriptor myConceptCapabilityMatrix = createDescriptorForCapabilityMatrix();
  /*package*/ final ConceptDescriptor myConceptCapabilityMintLod = createDescriptorForCapabilityMintLod();
  /*package*/ final ConceptDescriptor myConceptCapabilityMultiViewPort = createDescriptorForCapabilityMultiViewPort();
  /*package*/ final ConceptDescriptor myConceptCapabilityPipes = createDescriptorForCapabilityPipes();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampled1D = createDescriptorForCapabilitySampled1D();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampled2D = createDescriptorForCapabilitySampled2D();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampled3D = createDescriptorForCapabilitySampled3D();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampledBuffer = createDescriptorForCapabilitySampledBuffer();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampledCube = createDescriptorForCapabilitySampledCube();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampledImageArrayDynamicIndexing = createDescriptorForCapabilitySampledImageArrayDynamicIndexing();
  /*package*/ final ConceptDescriptor myConceptCapabilitySampledRect = createDescriptorForCapabilitySampledRect();
  /*package*/ final ConceptDescriptor myConceptCapabilityShader = createDescriptorForCapabilityShader();
  /*package*/ final ConceptDescriptor myConceptCapabilityShaderLayer = createDescriptorForCapabilityShaderLayer();
  /*package*/ final ConceptDescriptor myConceptCapabilityShaderViewPortIndex = createDescriptorForCapabilityShaderViewPortIndex();
  /*package*/ final ConceptDescriptor myConceptCapabilitySparseResidency = createDescriptorForCapabilitySparseResidency();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageBufferArrayDynamicIndexing = createDescriptorForCapabilityStorageBufferArrayDynamicIndexing();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageBuffrer16BitAccess = createDescriptorForCapabilityStorageBuffrer16BitAccess();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageImageArrayDynamicIndexing = createDescriptorForCapabilityStorageImageArrayDynamicIndexing();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageImageExtendedFormats = createDescriptorForCapabilityStorageImageExtendedFormats();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageImageMultisample = createDescriptorForCapabilityStorageImageMultisample();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageImageReadWithoutFormat = createDescriptorForCapabilityStorageImageReadWithoutFormat();
  /*package*/ final ConceptDescriptor myConceptCapabilityStorageImageWriteWithoutFormat = createDescriptorForCapabilityStorageImageWriteWithoutFormat();
  /*package*/ final ConceptDescriptor myConceptCapabilityTesselation = createDescriptorForCapabilityTesselation();
  /*package*/ final ConceptDescriptor myConceptCapabilityTesselationPointSize = createDescriptorForCapabilityTesselationPointSize();
  /*package*/ final ConceptDescriptor myConceptCapabilityTransformFeedback = createDescriptorForCapabilityTransformFeedback();
  /*package*/ final ConceptDescriptor myConceptCapabilityUniformBuffer16BitAccess = createDescriptorForCapabilityUniformBuffer16BitAccess();
  /*package*/ final ConceptDescriptor myConceptCapabilityUniformBufferArrayDynammicIndexingBlock = createDescriptorForCapabilityUniformBufferArrayDynammicIndexingBlock();
  /*package*/ final ConceptDescriptor myConceptCapabilityVector16 = createDescriptorForCapabilityVector16();
  /*package*/ final ConceptDescriptor myConceptConstantInstruction = createDescriptorForConstantInstruction();
  /*package*/ final ConceptDescriptor myConceptContinueEdge = createDescriptorForContinueEdge();
  /*package*/ final ConceptDescriptor myConceptDebugInstruction = createDescriptorForDebugInstruction();
  /*package*/ final ConceptDescriptor myConceptDecoration = createDescriptorForDecoration();
  /*package*/ final ConceptDescriptor myConceptEntryPoint = createDescriptorForEntryPoint();
  /*package*/ final ConceptDescriptor myConceptExecutionModeDeclaration = createDescriptorForExecutionModeDeclaration();
  /*package*/ final ConceptDescriptor myConceptFunctionTerminationInstruction = createDescriptorForFunctionTerminationInstruction();
  /*package*/ final ConceptDescriptor myConceptHeaderBlock = createDescriptorForHeaderBlock();
  /*package*/ final ConceptDescriptor myConceptId = createDescriptorForId();
  /*package*/ final ConceptDescriptor myConceptIncomingCallableDataKHR = createDescriptorForIncomingCallableDataKHR();
  /*package*/ final ConceptDescriptor myConceptIncomingCallableDataNV = createDescriptorForIncomingCallableDataNV();
  /*package*/ final ConceptDescriptor myConceptInstruction = createDescriptorForInstruction();
  /*package*/ final ConceptDescriptor myConceptLiteral = createDescriptorForLiteral();
  /*package*/ final ConceptDescriptor myConceptLoopHeader = createDescriptorForLoopHeader();
  /*package*/ final ConceptDescriptor myConceptMemoryObject = createDescriptorForMemoryObject();
  /*package*/ final ConceptDescriptor myConceptMemoryObjectDeclaration = createDescriptorForMemoryObjectDeclaration();
  /*package*/ final ConceptDescriptor myConceptMergeBlock = createDescriptorForMergeBlock();
  /*package*/ final ConceptDescriptor myConceptMergeEdge = createDescriptorForMergeEdge();
  /*package*/ final ConceptDescriptor myConceptMergeInstruction = createDescriptorForMergeInstruction();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptNodeOutputPayloadAMDX = createDescriptorForNodeOutputPayloadAMDX();
  /*package*/ final ConceptDescriptor myConceptNodePayloadAMDX = createDescriptorForNodePayloadAMDX();
  /*package*/ final ConceptDescriptor myConceptNonSemanticInstruction = createDescriptorForNonSemanticInstruction();
  /*package*/ final ConceptDescriptor myConceptNumericalName = createDescriptorForNumericalName();
  /*package*/ final ConceptDescriptor myConceptObject = createDescriptorForObject();
  /*package*/ final ConceptDescriptor myConceptOpAll = createDescriptorForOpAll();
  /*package*/ final ConceptDescriptor myConceptOpAny = createDescriptorForOpAny();
  /*package*/ final ConceptDescriptor myConceptOpBitCount = createDescriptorForOpBitCount();
  /*package*/ final ConceptDescriptor myConceptOpBitFieldInsert = createDescriptorForOpBitFieldInsert();
  /*package*/ final ConceptDescriptor myConceptOpBitFieldSExtract = createDescriptorForOpBitFieldSExtract();
  /*package*/ final ConceptDescriptor myConceptOpBitFieldUExtract = createDescriptorForOpBitFieldUExtract();
  /*package*/ final ConceptDescriptor myConceptOpBitReverse = createDescriptorForOpBitReverse();
  /*package*/ final ConceptDescriptor myConceptOpBitwiseAnd = createDescriptorForOpBitwiseAnd();
  /*package*/ final ConceptDescriptor myConceptOpBitwiseOr = createDescriptorForOpBitwiseOr();
  /*package*/ final ConceptDescriptor myConceptOpBitwiseXOR = createDescriptorForOpBitwiseXOR();
  /*package*/ final ConceptDescriptor myConceptOpBranch = createDescriptorForOpBranch();
  /*package*/ final ConceptDescriptor myConceptOpBranchConditional = createDescriptorForOpBranchConditional();
  /*package*/ final ConceptDescriptor myConceptOpCapability = createDescriptorForOpCapability();
  /*package*/ final ConceptDescriptor myConceptOpCode = createDescriptorForOpCode();
  /*package*/ final ConceptDescriptor myConceptOpConstant = createDescriptorForOpConstant();
  /*package*/ final ConceptDescriptor myConceptOpConstantComposite = createDescriptorForOpConstantComposite();
  /*package*/ final ConceptDescriptor myConceptOpConstantFalse = createDescriptorForOpConstantFalse();
  /*package*/ final ConceptDescriptor myConceptOpConstantNull = createDescriptorForOpConstantNull();
  /*package*/ final ConceptDescriptor myConceptOpConstantSampler = createDescriptorForOpConstantSampler();
  /*package*/ final ConceptDescriptor myConceptOpConstantTrue = createDescriptorForOpConstantTrue();
  /*package*/ final ConceptDescriptor myConceptOpDecorate = createDescriptorForOpDecorate();
  /*package*/ final ConceptDescriptor myConceptOpDecorateId = createDescriptorForOpDecorateId();
  /*package*/ final ConceptDescriptor myConceptOpDecorateString = createDescriptorForOpDecorateString();
  /*package*/ final ConceptDescriptor myConceptOpDecorationGroup = createDescriptorForOpDecorationGroup();
  /*package*/ final ConceptDescriptor myConceptOpEntryPoint = createDescriptorForOpEntryPoint();
  /*package*/ final ConceptDescriptor myConceptOpExecutionMode = createDescriptorForOpExecutionMode();
  /*package*/ final ConceptDescriptor myConceptOpExecutionModeId = createDescriptorForOpExecutionModeId();
  /*package*/ final ConceptDescriptor myConceptOpExtInst = createDescriptorForOpExtInst();
  /*package*/ final ConceptDescriptor myConceptOpExtInstImport = createDescriptorForOpExtInstImport();
  /*package*/ final ConceptDescriptor myConceptOpExtension = createDescriptorForOpExtension();
  /*package*/ final ConceptDescriptor myConceptOpFOrdEqual = createDescriptorForOpFOrdEqual();
  /*package*/ final ConceptDescriptor myConceptOpFOrdGreaterThan = createDescriptorForOpFOrdGreaterThan();
  /*package*/ final ConceptDescriptor myConceptOpFOrdGreaterThanEqual = createDescriptorForOpFOrdGreaterThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpFOrdLessThan = createDescriptorForOpFOrdLessThan();
  /*package*/ final ConceptDescriptor myConceptOpFOrdLessThanEqual = createDescriptorForOpFOrdLessThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpFOrdNotEqual = createDescriptorForOpFOrdNotEqual();
  /*package*/ final ConceptDescriptor myConceptOpFUnorcGreaterThanEqual = createDescriptorForOpFUnorcGreaterThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpFUnordEqual = createDescriptorForOpFUnordEqual();
  /*package*/ final ConceptDescriptor myConceptOpFUnordGreaterThan = createDescriptorForOpFUnordGreaterThan();
  /*package*/ final ConceptDescriptor myConceptOpFUnordLessThan = createDescriptorForOpFUnordLessThan();
  /*package*/ final ConceptDescriptor myConceptOpFUnordLessThanEqual = createDescriptorForOpFUnordLessThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpFUnordNotEqual = createDescriptorForOpFUnordNotEqual();
  /*package*/ final ConceptDescriptor myConceptOpFunction = createDescriptorForOpFunction();
  /*package*/ final ConceptDescriptor myConceptOpFunctionCall = createDescriptorForOpFunctionCall();
  /*package*/ final ConceptDescriptor myConceptOpFunctionEnd = createDescriptorForOpFunctionEnd();
  /*package*/ final ConceptDescriptor myConceptOpFunctionParameter = createDescriptorForOpFunctionParameter();
  /*package*/ final ConceptDescriptor myConceptOpGroupDecorate = createDescriptorForOpGroupDecorate();
  /*package*/ final ConceptDescriptor myConceptOpGroupMemberDecorate = createDescriptorForOpGroupMemberDecorate();
  /*package*/ final ConceptDescriptor myConceptOpIEqual = createDescriptorForOpIEqual();
  /*package*/ final ConceptDescriptor myConceptOpINotEqual = createDescriptorForOpINotEqual();
  /*package*/ final ConceptDescriptor myConceptOpIsFinite = createDescriptorForOpIsFinite();
  /*package*/ final ConceptDescriptor myConceptOpIsInf = createDescriptorForOpIsInf();
  /*package*/ final ConceptDescriptor myConceptOpIsNan = createDescriptorForOpIsNan();
  /*package*/ final ConceptDescriptor myConceptOpIsNormal = createDescriptorForOpIsNormal();
  /*package*/ final ConceptDescriptor myConceptOpKill = createDescriptorForOpKill();
  /*package*/ final ConceptDescriptor myConceptOpLabel = createDescriptorForOpLabel();
  /*package*/ final ConceptDescriptor myConceptOpLessOrGreater = createDescriptorForOpLessOrGreater();
  /*package*/ final ConceptDescriptor myConceptOpLoad = createDescriptorForOpLoad();
  /*package*/ final ConceptDescriptor myConceptOpLogicalAnd = createDescriptorForOpLogicalAnd();
  /*package*/ final ConceptDescriptor myConceptOpLogicalEqual = createDescriptorForOpLogicalEqual();
  /*package*/ final ConceptDescriptor myConceptOpLogicalNot = createDescriptorForOpLogicalNot();
  /*package*/ final ConceptDescriptor myConceptOpLogicalNotEqual = createDescriptorForOpLogicalNotEqual();
  /*package*/ final ConceptDescriptor myConceptOpLogicalOr = createDescriptorForOpLogicalOr();
  /*package*/ final ConceptDescriptor myConceptOpLoopMerge = createDescriptorForOpLoopMerge();
  /*package*/ final ConceptDescriptor myConceptOpMemberDecorate = createDescriptorForOpMemberDecorate();
  /*package*/ final ConceptDescriptor myConceptOpMemberName = createDescriptorForOpMemberName();
  /*package*/ final ConceptDescriptor myConceptOpMemoryModel = createDescriptorForOpMemoryModel();
  /*package*/ final ConceptDescriptor myConceptOpModuleProcessed = createDescriptorForOpModuleProcessed();
  /*package*/ final ConceptDescriptor myConceptOpName = createDescriptorForOpName();
  /*package*/ final ConceptDescriptor myConceptOpNot = createDescriptorForOpNot();
  /*package*/ final ConceptDescriptor myConceptOpOrdered = createDescriptorForOpOrdered();
  /*package*/ final ConceptDescriptor myConceptOpPhi = createDescriptorForOpPhi();
  /*package*/ final ConceptDescriptor myConceptOpPtrAccessChain = createDescriptorForOpPtrAccessChain();
  /*package*/ final ConceptDescriptor myConceptOpReturn = createDescriptorForOpReturn();
  /*package*/ final ConceptDescriptor myConceptOpReturnValue = createDescriptorForOpReturnValue();
  /*package*/ final ConceptDescriptor myConceptOpSGreaterThan = createDescriptorForOpSGreaterThan();
  /*package*/ final ConceptDescriptor myConceptOpSGreaterThanEqual = createDescriptorForOpSGreaterThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpSLessThan = createDescriptorForOpSLessThan();
  /*package*/ final ConceptDescriptor myConceptOpSLessThanEqual = createDescriptorForOpSLessThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpSelecetionMerge = createDescriptorForOpSelecetionMerge();
  /*package*/ final ConceptDescriptor myConceptOpSelect = createDescriptorForOpSelect();
  /*package*/ final ConceptDescriptor myConceptOpShiftLeftLogical = createDescriptorForOpShiftLeftLogical();
  /*package*/ final ConceptDescriptor myConceptOpShiftRightArithmetic = createDescriptorForOpShiftRightArithmetic();
  /*package*/ final ConceptDescriptor myConceptOpShiftRightLogical = createDescriptorForOpShiftRightLogical();
  /*package*/ final ConceptDescriptor myConceptOpSignBitSet = createDescriptorForOpSignBitSet();
  /*package*/ final ConceptDescriptor myConceptOpSource = createDescriptorForOpSource();
  /*package*/ final ConceptDescriptor myConceptOpSourceContinued = createDescriptorForOpSourceContinued();
  /*package*/ final ConceptDescriptor myConceptOpSourceExtension = createDescriptorForOpSourceExtension();
  /*package*/ final ConceptDescriptor myConceptOpSpecConstant = createDescriptorForOpSpecConstant();
  /*package*/ final ConceptDescriptor myConceptOpSpecConstantComposite = createDescriptorForOpSpecConstantComposite();
  /*package*/ final ConceptDescriptor myConceptOpSpecConstantOp = createDescriptorForOpSpecConstantOp();
  /*package*/ final ConceptDescriptor myConceptOpStore = createDescriptorForOpStore();
  /*package*/ final ConceptDescriptor myConceptOpString = createDescriptorForOpString();
  /*package*/ final ConceptDescriptor myConceptOpSwitch = createDescriptorForOpSwitch();
  /*package*/ final ConceptDescriptor myConceptOpTerminateInvocation = createDescriptorForOpTerminateInvocation();
  /*package*/ final ConceptDescriptor myConceptOpTypeBool = createDescriptorForOpTypeBool();
  /*package*/ final ConceptDescriptor myConceptOpTypeDeviceEvent = createDescriptorForOpTypeDeviceEvent();
  /*package*/ final ConceptDescriptor myConceptOpTypeEvent = createDescriptorForOpTypeEvent();
  /*package*/ final ConceptDescriptor myConceptOpTypeFloat = createDescriptorForOpTypeFloat();
  /*package*/ final ConceptDescriptor myConceptOpTypeForwardPointer = createDescriptorForOpTypeForwardPointer();
  /*package*/ final ConceptDescriptor myConceptOpTypeImage = createDescriptorForOpTypeImage();
  /*package*/ final ConceptDescriptor myConceptOpTypeInt = createDescriptorForOpTypeInt();
  /*package*/ final ConceptDescriptor myConceptOpTypeMatrix = createDescriptorForOpTypeMatrix();
  /*package*/ final ConceptDescriptor myConceptOpTypeNamedBarrier = createDescriptorForOpTypeNamedBarrier();
  /*package*/ final ConceptDescriptor myConceptOpTypeOpaque = createDescriptorForOpTypeOpaque();
  /*package*/ final ConceptDescriptor myConceptOpTypePipe = createDescriptorForOpTypePipe();
  /*package*/ final ConceptDescriptor myConceptOpTypePipeStorage = createDescriptorForOpTypePipeStorage();
  /*package*/ final ConceptDescriptor myConceptOpTypePointer = createDescriptorForOpTypePointer();
  /*package*/ final ConceptDescriptor myConceptOpTypeQueue = createDescriptorForOpTypeQueue();
  /*package*/ final ConceptDescriptor myConceptOpTypeReserveId = createDescriptorForOpTypeReserveId();
  /*package*/ final ConceptDescriptor myConceptOpTypeReverseId = createDescriptorForOpTypeReverseId();
  /*package*/ final ConceptDescriptor myConceptOpTypeSampledImage = createDescriptorForOpTypeSampledImage();
  /*package*/ final ConceptDescriptor myConceptOpTypeSampler = createDescriptorForOpTypeSampler();
  /*package*/ final ConceptDescriptor myConceptOpTypeVariable = createDescriptorForOpTypeVariable();
  /*package*/ final ConceptDescriptor myConceptOpTypeVector = createDescriptorForOpTypeVector();
  /*package*/ final ConceptDescriptor myConceptOpTypeVoid = createDescriptorForOpTypeVoid();
  /*package*/ final ConceptDescriptor myConceptOpUGreaterThan = createDescriptorForOpUGreaterThan();
  /*package*/ final ConceptDescriptor myConceptOpUGreaterThanEqual = createDescriptorForOpUGreaterThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpULessThan = createDescriptorForOpULessThan();
  /*package*/ final ConceptDescriptor myConceptOpULessThanEqual = createDescriptorForOpULessThanEqual();
  /*package*/ final ConceptDescriptor myConceptOpUnordered = createDescriptorForOpUnordered();
  /*package*/ final ConceptDescriptor myConceptOpUnreachable = createDescriptorForOpUnreachable();
  /*package*/ final ConceptDescriptor myConceptOpVariable = createDescriptorForOpVariable();
  /*package*/ final ConceptDescriptor myConceptOperand = createDescriptorForOperand();
  /*package*/ final ConceptDescriptor myConceptPath = createDescriptorForPath();
  /*package*/ final ConceptDescriptor myConceptResult = createDescriptorForResult();
  /*package*/ final ConceptDescriptor myConceptSelectionHeader = createDescriptorForSelectionHeader();
  /*package*/ final ConceptDescriptor myConceptStorageClass = createDescriptorForStorageClass();
  /*package*/ final ConceptDescriptor myConceptStorageClassAtomicCounter = createDescriptorForStorageClassAtomicCounter();
  /*package*/ final ConceptDescriptor myConceptStorageClassBuffer = createDescriptorForStorageClassBuffer();
  /*package*/ final ConceptDescriptor myConceptStorageClassCrossWorkgroup = createDescriptorForStorageClassCrossWorkgroup();
  /*package*/ final ConceptDescriptor myConceptStorageClassFunction = createDescriptorForStorageClassFunction();
  /*package*/ final ConceptDescriptor myConceptStorageClassHitAttributeKHR = createDescriptorForStorageClassHitAttributeKHR();
  /*package*/ final ConceptDescriptor myConceptStorageClassHitAttributeNV = createDescriptorForStorageClassHitAttributeNV();
  /*package*/ final ConceptDescriptor myConceptStorageClassImage = createDescriptorForStorageClassImage();
  /*package*/ final ConceptDescriptor myConceptStorageClassIncomingPayloadNV = createDescriptorForStorageClassIncomingPayloadNV();
  /*package*/ final ConceptDescriptor myConceptStorageClassIncomingRayPayloadKHR = createDescriptorForStorageClassIncomingRayPayloadKHR();
  /*package*/ final ConceptDescriptor myConceptStorageClassInput = createDescriptorForStorageClassInput();
  /*package*/ final ConceptDescriptor myConceptStorageClassOutput = createDescriptorForStorageClassOutput();
  /*package*/ final ConceptDescriptor myConceptStorageClassPrivate = createDescriptorForStorageClassPrivate();
  /*package*/ final ConceptDescriptor myConceptStorageClassPushConstant = createDescriptorForStorageClassPushConstant();
  /*package*/ final ConceptDescriptor myConceptStorageClassRayPayloadKHR = createDescriptorForStorageClassRayPayloadKHR();
  /*package*/ final ConceptDescriptor myConceptStorageClassRayPayloadNV = createDescriptorForStorageClassRayPayloadNV();
  /*package*/ final ConceptDescriptor myConceptStorageClassShaderRecordBufferKHR = createDescriptorForStorageClassShaderRecordBufferKHR();
  /*package*/ final ConceptDescriptor myConceptStorageClassShaderRecordBufferNV = createDescriptorForStorageClassShaderRecordBufferNV();
  /*package*/ final ConceptDescriptor myConceptStorageClassTileImageEXT = createDescriptorForStorageClassTileImageEXT();
  /*package*/ final ConceptDescriptor myConceptStorageClassUniform = createDescriptorForStorageClassUniform();
  /*package*/ final ConceptDescriptor myConceptStorageClassUniformConstant = createDescriptorForStorageClassUniformConstant();
  /*package*/ final ConceptDescriptor myConceptStorageClassWorkgroup = createDescriptorForStorageClassWorkgroup();
  /*package*/ final ConceptDescriptor myConceptStructuredControlFlowEdge = createDescriptorForStructuredControlFlowEdge();
  /*package*/ final ConceptDescriptor myConceptStructuredControlFlowPath = createDescriptorForStructuredControlFlowPath();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptTypeAbstract = createDescriptorForTypeAbstract();
  /*package*/ final ConceptDescriptor myConceptTypeAggregate = createDescriptorForTypeAggregate();
  /*package*/ final ConceptDescriptor myConceptTypeArray = createDescriptorForTypeArray();
  /*package*/ final ConceptDescriptor myConceptTypeBoolean = createDescriptorForTypeBoolean();
  /*package*/ final ConceptDescriptor myConceptTypeComposite = createDescriptorForTypeComposite();
  /*package*/ final ConceptDescriptor myConceptTypeDeclaration = createDescriptorForTypeDeclaration();
  /*package*/ final ConceptDescriptor myConceptTypeFloatingPoint = createDescriptorForTypeFloatingPoint();
  /*package*/ final ConceptDescriptor myConceptTypeImage = createDescriptorForTypeImage();
  /*package*/ final ConceptDescriptor myConceptTypeInteger = createDescriptorForTypeInteger();
  /*package*/ final ConceptDescriptor myConceptTypeLogicalointer = createDescriptorForTypeLogicalointer();
  /*package*/ final ConceptDescriptor myConceptTypeMatrix = createDescriptorForTypeMatrix();
  /*package*/ final ConceptDescriptor myConceptTypeNumerical = createDescriptorForTypeNumerical();
  /*package*/ final ConceptDescriptor myConceptTypeOpaque = createDescriptorForTypeOpaque();
  /*package*/ final ConceptDescriptor myConceptTypePhysicalPointer = createDescriptorForTypePhysicalPointer();
  /*package*/ final ConceptDescriptor myConceptTypeSampler = createDescriptorForTypeSampler();
  /*package*/ final ConceptDescriptor myConceptTypeScalar = createDescriptorForTypeScalar();
  /*package*/ final ConceptDescriptor myConceptTypeStructure = createDescriptorForTypeStructure();
  /*package*/ final ConceptDescriptor myConceptTypeVector = createDescriptorForTypeVector();
  /*package*/ final ConceptDescriptor myConceptVariablePointer = createDescriptorForVariablePointer();
  /*package*/ final ConceptDescriptor myConceptWordCount = createDescriptorForWordCount();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAnnotationInstruction, myConceptBackEdge, myConceptBackEdgeBlock, myConceptBlock, myConceptBlockTerminationInstruction, myConceptBranchEdge, myConceptBranchInstruction, myConceptByte, myConceptCallableDataKHR, myConceptCallableDataNV, myConceptCapabiiltySampleRateShading, myConceptCapabiityAtomicInt64, myConceptCapabiityGenericPointer, myConceptCapabiityImageRect, myConceptCapabiityInputAttachment, myConceptCapabilithyAtomicInt16, myConceptCapability, myConceptCapabilityAddresses, myConceptCapabilityAtomicFloat32Add, myConceptCapabilityAtomicFloat32MinMax, myConceptCapabilityAtomicFloat64Add, myConceptCapabilityAtomicFloat64MinMax, myConceptCapabilityAtomicInt32, myConceptCapabilityAtomicInt8, myConceptCapabilityAtomicStorage, myConceptCapabilityClipDistance, myConceptCapabilityCullDistance, myConceptCapabilityDerivativeControl, myConceptCapabilityDeviceEnqueue, myConceptCapabilityDeviceGroup, myConceptCapabilityFloat16, myConceptCapabilityFloat16Buffer, myConceptCapabilityFloat64, myConceptCapabilityGenericPointer, myConceptCapabilityGeometry, myConceptCapabilityGeometryPointSize, myConceptCapabilityGeometryStreams, myConceptCapabilityGroupNonUniform, myConceptCapabilityGroupNonUniformBallot, myConceptCapabilityGroupNonUniformRelative, myConceptCapabilityGroupNonUniformShuffle, myConceptCapabilityGroupNonUniformShuffleRelative, myConceptCapabilityGroupNonUniformVote, myConceptCapabilityGroups, myConceptCapabilityImageBasic, myConceptCapabilityImageBuffer, myConceptCapabilityImageCubeArray, myConceptCapabilityImageGatherExtended, myConceptCapabilityImageMSArray, myConceptCapabilityImageMipmap, myConceptCapabilityImageReadWithoutFormat, myConceptCapabilityImageReadWrite, myConceptCapabilityInputAttachment, myConceptCapabilityInt16, myConceptCapabilityInt64, myConceptCapabilityInt64Atomics, myConceptCapabilityInt8, myConceptCapabilityInterpolationFunction, myConceptCapabilityKernel, myConceptCapabilityLinkage, myConceptCapabilityLiteralSampler, myConceptCapabilityMatrix, myConceptCapabilityMintLod, myConceptCapabilityMultiViewPort, myConceptCapabilityPipes, myConceptCapabilitySampled1D, myConceptCapabilitySampled2D, myConceptCapabilitySampled3D, myConceptCapabilitySampledBuffer, myConceptCapabilitySampledCube, myConceptCapabilitySampledImageArrayDynamicIndexing, myConceptCapabilitySampledRect, myConceptCapabilityShader, myConceptCapabilityShaderLayer, myConceptCapabilityShaderViewPortIndex, myConceptCapabilitySparseResidency, myConceptCapabilityStorageBufferArrayDynamicIndexing, myConceptCapabilityStorageBuffrer16BitAccess, myConceptCapabilityStorageImageArrayDynamicIndexing, myConceptCapabilityStorageImageExtendedFormats, myConceptCapabilityStorageImageMultisample, myConceptCapabilityStorageImageReadWithoutFormat, myConceptCapabilityStorageImageWriteWithoutFormat, myConceptCapabilityTesselation, myConceptCapabilityTesselationPointSize, myConceptCapabilityTransformFeedback, myConceptCapabilityUniformBuffer16BitAccess, myConceptCapabilityUniformBufferArrayDynammicIndexingBlock, myConceptCapabilityVector16, myConceptConstantInstruction, myConceptContinueEdge, myConceptDebugInstruction, myConceptDecoration, myConceptEntryPoint, myConceptExecutionModeDeclaration, myConceptFunctionTerminationInstruction, myConceptHeaderBlock, myConceptId, myConceptIncomingCallableDataKHR, myConceptIncomingCallableDataNV, myConceptInstruction, myConceptLiteral, myConceptLoopHeader, myConceptMemoryObject, myConceptMemoryObjectDeclaration, myConceptMergeBlock, myConceptMergeEdge, myConceptMergeInstruction, myConceptModule, myConceptNodeOutputPayloadAMDX, myConceptNodePayloadAMDX, myConceptNonSemanticInstruction, myConceptNumericalName, myConceptObject, myConceptOpAll, myConceptOpAny, myConceptOpBitCount, myConceptOpBitFieldInsert, myConceptOpBitFieldSExtract, myConceptOpBitFieldUExtract, myConceptOpBitReverse, myConceptOpBitwiseAnd, myConceptOpBitwiseOr, myConceptOpBitwiseXOR, myConceptOpBranch, myConceptOpBranchConditional, myConceptOpCapability, myConceptOpCode, myConceptOpConstant, myConceptOpConstantComposite, myConceptOpConstantFalse, myConceptOpConstantNull, myConceptOpConstantSampler, myConceptOpConstantTrue, myConceptOpDecorate, myConceptOpDecorateId, myConceptOpDecorateString, myConceptOpDecorationGroup, myConceptOpEntryPoint, myConceptOpExecutionMode, myConceptOpExecutionModeId, myConceptOpExtInst, myConceptOpExtInstImport, myConceptOpExtension, myConceptOpFOrdEqual, myConceptOpFOrdGreaterThan, myConceptOpFOrdGreaterThanEqual, myConceptOpFOrdLessThan, myConceptOpFOrdLessThanEqual, myConceptOpFOrdNotEqual, myConceptOpFUnorcGreaterThanEqual, myConceptOpFUnordEqual, myConceptOpFUnordGreaterThan, myConceptOpFUnordLessThan, myConceptOpFUnordLessThanEqual, myConceptOpFUnordNotEqual, myConceptOpFunction, myConceptOpFunctionCall, myConceptOpFunctionEnd, myConceptOpFunctionParameter, myConceptOpGroupDecorate, myConceptOpGroupMemberDecorate, myConceptOpIEqual, myConceptOpINotEqual, myConceptOpIsFinite, myConceptOpIsInf, myConceptOpIsNan, myConceptOpIsNormal, myConceptOpKill, myConceptOpLabel, myConceptOpLessOrGreater, myConceptOpLoad, myConceptOpLogicalAnd, myConceptOpLogicalEqual, myConceptOpLogicalNot, myConceptOpLogicalNotEqual, myConceptOpLogicalOr, myConceptOpLoopMerge, myConceptOpMemberDecorate, myConceptOpMemberName, myConceptOpMemoryModel, myConceptOpModuleProcessed, myConceptOpName, myConceptOpNot, myConceptOpOrdered, myConceptOpPhi, myConceptOpPtrAccessChain, myConceptOpReturn, myConceptOpReturnValue, myConceptOpSGreaterThan, myConceptOpSGreaterThanEqual, myConceptOpSLessThan, myConceptOpSLessThanEqual, myConceptOpSelecetionMerge, myConceptOpSelect, myConceptOpShiftLeftLogical, myConceptOpShiftRightArithmetic, myConceptOpShiftRightLogical, myConceptOpSignBitSet, myConceptOpSource, myConceptOpSourceContinued, myConceptOpSourceExtension, myConceptOpSpecConstant, myConceptOpSpecConstantComposite, myConceptOpSpecConstantOp, myConceptOpStore, myConceptOpString, myConceptOpSwitch, myConceptOpTerminateInvocation, myConceptOpTypeBool, myConceptOpTypeDeviceEvent, myConceptOpTypeEvent, myConceptOpTypeFloat, myConceptOpTypeForwardPointer, myConceptOpTypeImage, myConceptOpTypeInt, myConceptOpTypeMatrix, myConceptOpTypeNamedBarrier, myConceptOpTypeOpaque, myConceptOpTypePipe, myConceptOpTypePipeStorage, myConceptOpTypePointer, myConceptOpTypeQueue, myConceptOpTypeReserveId, myConceptOpTypeReverseId, myConceptOpTypeSampledImage, myConceptOpTypeSampler, myConceptOpTypeVariable, myConceptOpTypeVector, myConceptOpTypeVoid, myConceptOpUGreaterThan, myConceptOpUGreaterThanEqual, myConceptOpULessThan, myConceptOpULessThanEqual, myConceptOpUnordered, myConceptOpUnreachable, myConceptOpVariable, myConceptOperand, myConceptPath, myConceptResult, myConceptSelectionHeader, myConceptStorageClass, myConceptStorageClassAtomicCounter, myConceptStorageClassBuffer, myConceptStorageClassCrossWorkgroup, myConceptStorageClassFunction, myConceptStorageClassHitAttributeKHR, myConceptStorageClassHitAttributeNV, myConceptStorageClassImage, myConceptStorageClassIncomingPayloadNV, myConceptStorageClassIncomingRayPayloadKHR, myConceptStorageClassInput, myConceptStorageClassOutput, myConceptStorageClassPrivate, myConceptStorageClassPushConstant, myConceptStorageClassRayPayloadKHR, myConceptStorageClassRayPayloadNV, myConceptStorageClassShaderRecordBufferKHR, myConceptStorageClassShaderRecordBufferNV, myConceptStorageClassTileImageEXT, myConceptStorageClassUniform, myConceptStorageClassUniformConstant, myConceptStorageClassWorkgroup, myConceptStructuredControlFlowEdge, myConceptStructuredControlFlowPath, myConceptType, myConceptTypeAbstract, myConceptTypeAggregate, myConceptTypeArray, myConceptTypeBoolean, myConceptTypeComposite, myConceptTypeDeclaration, myConceptTypeFloatingPoint, myConceptTypeImage, myConceptTypeInteger, myConceptTypeLogicalointer, myConceptTypeMatrix, myConceptTypeNumerical, myConceptTypeOpaque, myConceptTypePhysicalPointer, myConceptTypeSampler, myConceptTypeScalar, myConceptTypeStructure, myConceptTypeVector, myConceptVariablePointer, myConceptWordCount);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AnnotationInstruction:
        return myConceptAnnotationInstruction;
      case LanguageConceptSwitch.BackEdge:
        return myConceptBackEdge;
      case LanguageConceptSwitch.BackEdgeBlock:
        return myConceptBackEdgeBlock;
      case LanguageConceptSwitch.Block:
        return myConceptBlock;
      case LanguageConceptSwitch.BlockTerminationInstruction:
        return myConceptBlockTerminationInstruction;
      case LanguageConceptSwitch.BranchEdge:
        return myConceptBranchEdge;
      case LanguageConceptSwitch.BranchInstruction:
        return myConceptBranchInstruction;
      case LanguageConceptSwitch.Byte:
        return myConceptByte;
      case LanguageConceptSwitch.CallableDataKHR:
        return myConceptCallableDataKHR;
      case LanguageConceptSwitch.CallableDataNV:
        return myConceptCallableDataNV;
      case LanguageConceptSwitch.CapabiiltySampleRateShading:
        return myConceptCapabiiltySampleRateShading;
      case LanguageConceptSwitch.CapabiityAtomicInt64:
        return myConceptCapabiityAtomicInt64;
      case LanguageConceptSwitch.CapabiityGenericPointer:
        return myConceptCapabiityGenericPointer;
      case LanguageConceptSwitch.CapabiityImageRect:
        return myConceptCapabiityImageRect;
      case LanguageConceptSwitch.CapabiityInputAttachment:
        return myConceptCapabiityInputAttachment;
      case LanguageConceptSwitch.CapabilithyAtomicInt16:
        return myConceptCapabilithyAtomicInt16;
      case LanguageConceptSwitch.Capability:
        return myConceptCapability;
      case LanguageConceptSwitch.CapabilityAddresses:
        return myConceptCapabilityAddresses;
      case LanguageConceptSwitch.CapabilityAtomicFloat32Add:
        return myConceptCapabilityAtomicFloat32Add;
      case LanguageConceptSwitch.CapabilityAtomicFloat32MinMax:
        return myConceptCapabilityAtomicFloat32MinMax;
      case LanguageConceptSwitch.CapabilityAtomicFloat64Add:
        return myConceptCapabilityAtomicFloat64Add;
      case LanguageConceptSwitch.CapabilityAtomicFloat64MinMax:
        return myConceptCapabilityAtomicFloat64MinMax;
      case LanguageConceptSwitch.CapabilityAtomicInt32:
        return myConceptCapabilityAtomicInt32;
      case LanguageConceptSwitch.CapabilityAtomicInt8:
        return myConceptCapabilityAtomicInt8;
      case LanguageConceptSwitch.CapabilityAtomicStorage:
        return myConceptCapabilityAtomicStorage;
      case LanguageConceptSwitch.CapabilityClipDistance:
        return myConceptCapabilityClipDistance;
      case LanguageConceptSwitch.CapabilityCullDistance:
        return myConceptCapabilityCullDistance;
      case LanguageConceptSwitch.CapabilityDerivativeControl:
        return myConceptCapabilityDerivativeControl;
      case LanguageConceptSwitch.CapabilityDeviceEnqueue:
        return myConceptCapabilityDeviceEnqueue;
      case LanguageConceptSwitch.CapabilityDeviceGroup:
        return myConceptCapabilityDeviceGroup;
      case LanguageConceptSwitch.CapabilityFloat16:
        return myConceptCapabilityFloat16;
      case LanguageConceptSwitch.CapabilityFloat16Buffer:
        return myConceptCapabilityFloat16Buffer;
      case LanguageConceptSwitch.CapabilityFloat64:
        return myConceptCapabilityFloat64;
      case LanguageConceptSwitch.CapabilityGenericPointer:
        return myConceptCapabilityGenericPointer;
      case LanguageConceptSwitch.CapabilityGeometry:
        return myConceptCapabilityGeometry;
      case LanguageConceptSwitch.CapabilityGeometryPointSize:
        return myConceptCapabilityGeometryPointSize;
      case LanguageConceptSwitch.CapabilityGeometryStreams:
        return myConceptCapabilityGeometryStreams;
      case LanguageConceptSwitch.CapabilityGroupNonUniform:
        return myConceptCapabilityGroupNonUniform;
      case LanguageConceptSwitch.CapabilityGroupNonUniformBallot:
        return myConceptCapabilityGroupNonUniformBallot;
      case LanguageConceptSwitch.CapabilityGroupNonUniformRelative:
        return myConceptCapabilityGroupNonUniformRelative;
      case LanguageConceptSwitch.CapabilityGroupNonUniformShuffle:
        return myConceptCapabilityGroupNonUniformShuffle;
      case LanguageConceptSwitch.CapabilityGroupNonUniformShuffleRelative:
        return myConceptCapabilityGroupNonUniformShuffleRelative;
      case LanguageConceptSwitch.CapabilityGroupNonUniformVote:
        return myConceptCapabilityGroupNonUniformVote;
      case LanguageConceptSwitch.CapabilityGroups:
        return myConceptCapabilityGroups;
      case LanguageConceptSwitch.CapabilityImageBasic:
        return myConceptCapabilityImageBasic;
      case LanguageConceptSwitch.CapabilityImageBuffer:
        return myConceptCapabilityImageBuffer;
      case LanguageConceptSwitch.CapabilityImageCubeArray:
        return myConceptCapabilityImageCubeArray;
      case LanguageConceptSwitch.CapabilityImageGatherExtended:
        return myConceptCapabilityImageGatherExtended;
      case LanguageConceptSwitch.CapabilityImageMSArray:
        return myConceptCapabilityImageMSArray;
      case LanguageConceptSwitch.CapabilityImageMipmap:
        return myConceptCapabilityImageMipmap;
      case LanguageConceptSwitch.CapabilityImageReadWithoutFormat:
        return myConceptCapabilityImageReadWithoutFormat;
      case LanguageConceptSwitch.CapabilityImageReadWrite:
        return myConceptCapabilityImageReadWrite;
      case LanguageConceptSwitch.CapabilityInputAttachment:
        return myConceptCapabilityInputAttachment;
      case LanguageConceptSwitch.CapabilityInt16:
        return myConceptCapabilityInt16;
      case LanguageConceptSwitch.CapabilityInt64:
        return myConceptCapabilityInt64;
      case LanguageConceptSwitch.CapabilityInt64Atomics:
        return myConceptCapabilityInt64Atomics;
      case LanguageConceptSwitch.CapabilityInt8:
        return myConceptCapabilityInt8;
      case LanguageConceptSwitch.CapabilityInterpolationFunction:
        return myConceptCapabilityInterpolationFunction;
      case LanguageConceptSwitch.CapabilityKernel:
        return myConceptCapabilityKernel;
      case LanguageConceptSwitch.CapabilityLinkage:
        return myConceptCapabilityLinkage;
      case LanguageConceptSwitch.CapabilityLiteralSampler:
        return myConceptCapabilityLiteralSampler;
      case LanguageConceptSwitch.CapabilityMatrix:
        return myConceptCapabilityMatrix;
      case LanguageConceptSwitch.CapabilityMintLod:
        return myConceptCapabilityMintLod;
      case LanguageConceptSwitch.CapabilityMultiViewPort:
        return myConceptCapabilityMultiViewPort;
      case LanguageConceptSwitch.CapabilityPipes:
        return myConceptCapabilityPipes;
      case LanguageConceptSwitch.CapabilitySampled1D:
        return myConceptCapabilitySampled1D;
      case LanguageConceptSwitch.CapabilitySampled2D:
        return myConceptCapabilitySampled2D;
      case LanguageConceptSwitch.CapabilitySampled3D:
        return myConceptCapabilitySampled3D;
      case LanguageConceptSwitch.CapabilitySampledBuffer:
        return myConceptCapabilitySampledBuffer;
      case LanguageConceptSwitch.CapabilitySampledCube:
        return myConceptCapabilitySampledCube;
      case LanguageConceptSwitch.CapabilitySampledImageArrayDynamicIndexing:
        return myConceptCapabilitySampledImageArrayDynamicIndexing;
      case LanguageConceptSwitch.CapabilitySampledRect:
        return myConceptCapabilitySampledRect;
      case LanguageConceptSwitch.CapabilityShader:
        return myConceptCapabilityShader;
      case LanguageConceptSwitch.CapabilityShaderLayer:
        return myConceptCapabilityShaderLayer;
      case LanguageConceptSwitch.CapabilityShaderViewPortIndex:
        return myConceptCapabilityShaderViewPortIndex;
      case LanguageConceptSwitch.CapabilitySparseResidency:
        return myConceptCapabilitySparseResidency;
      case LanguageConceptSwitch.CapabilityStorageBufferArrayDynamicIndexing:
        return myConceptCapabilityStorageBufferArrayDynamicIndexing;
      case LanguageConceptSwitch.CapabilityStorageBuffrer16BitAccess:
        return myConceptCapabilityStorageBuffrer16BitAccess;
      case LanguageConceptSwitch.CapabilityStorageImageArrayDynamicIndexing:
        return myConceptCapabilityStorageImageArrayDynamicIndexing;
      case LanguageConceptSwitch.CapabilityStorageImageExtendedFormats:
        return myConceptCapabilityStorageImageExtendedFormats;
      case LanguageConceptSwitch.CapabilityStorageImageMultisample:
        return myConceptCapabilityStorageImageMultisample;
      case LanguageConceptSwitch.CapabilityStorageImageReadWithoutFormat:
        return myConceptCapabilityStorageImageReadWithoutFormat;
      case LanguageConceptSwitch.CapabilityStorageImageWriteWithoutFormat:
        return myConceptCapabilityStorageImageWriteWithoutFormat;
      case LanguageConceptSwitch.CapabilityTesselation:
        return myConceptCapabilityTesselation;
      case LanguageConceptSwitch.CapabilityTesselationPointSize:
        return myConceptCapabilityTesselationPointSize;
      case LanguageConceptSwitch.CapabilityTransformFeedback:
        return myConceptCapabilityTransformFeedback;
      case LanguageConceptSwitch.CapabilityUniformBuffer16BitAccess:
        return myConceptCapabilityUniformBuffer16BitAccess;
      case LanguageConceptSwitch.CapabilityUniformBufferArrayDynammicIndexingBlock:
        return myConceptCapabilityUniformBufferArrayDynammicIndexingBlock;
      case LanguageConceptSwitch.CapabilityVector16:
        return myConceptCapabilityVector16;
      case LanguageConceptSwitch.ConstantInstruction:
        return myConceptConstantInstruction;
      case LanguageConceptSwitch.ContinueEdge:
        return myConceptContinueEdge;
      case LanguageConceptSwitch.DebugInstruction:
        return myConceptDebugInstruction;
      case LanguageConceptSwitch.Decoration:
        return myConceptDecoration;
      case LanguageConceptSwitch.EntryPoint:
        return myConceptEntryPoint;
      case LanguageConceptSwitch.ExecutionModeDeclaration:
        return myConceptExecutionModeDeclaration;
      case LanguageConceptSwitch.FunctionTerminationInstruction:
        return myConceptFunctionTerminationInstruction;
      case LanguageConceptSwitch.HeaderBlock:
        return myConceptHeaderBlock;
      case LanguageConceptSwitch.Id:
        return myConceptId;
      case LanguageConceptSwitch.IncomingCallableDataKHR:
        return myConceptIncomingCallableDataKHR;
      case LanguageConceptSwitch.IncomingCallableDataNV:
        return myConceptIncomingCallableDataNV;
      case LanguageConceptSwitch.Instruction:
        return myConceptInstruction;
      case LanguageConceptSwitch.Literal:
        return myConceptLiteral;
      case LanguageConceptSwitch.LoopHeader:
        return myConceptLoopHeader;
      case LanguageConceptSwitch.MemoryObject:
        return myConceptMemoryObject;
      case LanguageConceptSwitch.MemoryObjectDeclaration:
        return myConceptMemoryObjectDeclaration;
      case LanguageConceptSwitch.MergeBlock:
        return myConceptMergeBlock;
      case LanguageConceptSwitch.MergeEdge:
        return myConceptMergeEdge;
      case LanguageConceptSwitch.MergeInstruction:
        return myConceptMergeInstruction;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.NodeOutputPayloadAMDX:
        return myConceptNodeOutputPayloadAMDX;
      case LanguageConceptSwitch.NodePayloadAMDX:
        return myConceptNodePayloadAMDX;
      case LanguageConceptSwitch.NonSemanticInstruction:
        return myConceptNonSemanticInstruction;
      case LanguageConceptSwitch.NumericalName:
        return myConceptNumericalName;
      case LanguageConceptSwitch.Object:
        return myConceptObject;
      case LanguageConceptSwitch.OpAll:
        return myConceptOpAll;
      case LanguageConceptSwitch.OpAny:
        return myConceptOpAny;
      case LanguageConceptSwitch.OpBitCount:
        return myConceptOpBitCount;
      case LanguageConceptSwitch.OpBitFieldInsert:
        return myConceptOpBitFieldInsert;
      case LanguageConceptSwitch.OpBitFieldSExtract:
        return myConceptOpBitFieldSExtract;
      case LanguageConceptSwitch.OpBitFieldUExtract:
        return myConceptOpBitFieldUExtract;
      case LanguageConceptSwitch.OpBitReverse:
        return myConceptOpBitReverse;
      case LanguageConceptSwitch.OpBitwiseAnd:
        return myConceptOpBitwiseAnd;
      case LanguageConceptSwitch.OpBitwiseOr:
        return myConceptOpBitwiseOr;
      case LanguageConceptSwitch.OpBitwiseXOR:
        return myConceptOpBitwiseXOR;
      case LanguageConceptSwitch.OpBranch:
        return myConceptOpBranch;
      case LanguageConceptSwitch.OpBranchConditional:
        return myConceptOpBranchConditional;
      case LanguageConceptSwitch.OpCapability:
        return myConceptOpCapability;
      case LanguageConceptSwitch.OpCode:
        return myConceptOpCode;
      case LanguageConceptSwitch.OpConstant:
        return myConceptOpConstant;
      case LanguageConceptSwitch.OpConstantComposite:
        return myConceptOpConstantComposite;
      case LanguageConceptSwitch.OpConstantFalse:
        return myConceptOpConstantFalse;
      case LanguageConceptSwitch.OpConstantNull:
        return myConceptOpConstantNull;
      case LanguageConceptSwitch.OpConstantSampler:
        return myConceptOpConstantSampler;
      case LanguageConceptSwitch.OpConstantTrue:
        return myConceptOpConstantTrue;
      case LanguageConceptSwitch.OpDecorate:
        return myConceptOpDecorate;
      case LanguageConceptSwitch.OpDecorateId:
        return myConceptOpDecorateId;
      case LanguageConceptSwitch.OpDecorateString:
        return myConceptOpDecorateString;
      case LanguageConceptSwitch.OpDecorationGroup:
        return myConceptOpDecorationGroup;
      case LanguageConceptSwitch.OpEntryPoint:
        return myConceptOpEntryPoint;
      case LanguageConceptSwitch.OpExecutionMode:
        return myConceptOpExecutionMode;
      case LanguageConceptSwitch.OpExecutionModeId:
        return myConceptOpExecutionModeId;
      case LanguageConceptSwitch.OpExtInst:
        return myConceptOpExtInst;
      case LanguageConceptSwitch.OpExtInstImport:
        return myConceptOpExtInstImport;
      case LanguageConceptSwitch.OpExtension:
        return myConceptOpExtension;
      case LanguageConceptSwitch.OpFOrdEqual:
        return myConceptOpFOrdEqual;
      case LanguageConceptSwitch.OpFOrdGreaterThan:
        return myConceptOpFOrdGreaterThan;
      case LanguageConceptSwitch.OpFOrdGreaterThanEqual:
        return myConceptOpFOrdGreaterThanEqual;
      case LanguageConceptSwitch.OpFOrdLessThan:
        return myConceptOpFOrdLessThan;
      case LanguageConceptSwitch.OpFOrdLessThanEqual:
        return myConceptOpFOrdLessThanEqual;
      case LanguageConceptSwitch.OpFOrdNotEqual:
        return myConceptOpFOrdNotEqual;
      case LanguageConceptSwitch.OpFUnorcGreaterThanEqual:
        return myConceptOpFUnorcGreaterThanEqual;
      case LanguageConceptSwitch.OpFUnordEqual:
        return myConceptOpFUnordEqual;
      case LanguageConceptSwitch.OpFUnordGreaterThan:
        return myConceptOpFUnordGreaterThan;
      case LanguageConceptSwitch.OpFUnordLessThan:
        return myConceptOpFUnordLessThan;
      case LanguageConceptSwitch.OpFUnordLessThanEqual:
        return myConceptOpFUnordLessThanEqual;
      case LanguageConceptSwitch.OpFUnordNotEqual:
        return myConceptOpFUnordNotEqual;
      case LanguageConceptSwitch.OpFunction:
        return myConceptOpFunction;
      case LanguageConceptSwitch.OpFunctionCall:
        return myConceptOpFunctionCall;
      case LanguageConceptSwitch.OpFunctionEnd:
        return myConceptOpFunctionEnd;
      case LanguageConceptSwitch.OpFunctionParameter:
        return myConceptOpFunctionParameter;
      case LanguageConceptSwitch.OpGroupDecorate:
        return myConceptOpGroupDecorate;
      case LanguageConceptSwitch.OpGroupMemberDecorate:
        return myConceptOpGroupMemberDecorate;
      case LanguageConceptSwitch.OpIEqual:
        return myConceptOpIEqual;
      case LanguageConceptSwitch.OpINotEqual:
        return myConceptOpINotEqual;
      case LanguageConceptSwitch.OpIsFinite:
        return myConceptOpIsFinite;
      case LanguageConceptSwitch.OpIsInf:
        return myConceptOpIsInf;
      case LanguageConceptSwitch.OpIsNan:
        return myConceptOpIsNan;
      case LanguageConceptSwitch.OpIsNormal:
        return myConceptOpIsNormal;
      case LanguageConceptSwitch.OpKill:
        return myConceptOpKill;
      case LanguageConceptSwitch.OpLabel:
        return myConceptOpLabel;
      case LanguageConceptSwitch.OpLessOrGreater:
        return myConceptOpLessOrGreater;
      case LanguageConceptSwitch.OpLoad:
        return myConceptOpLoad;
      case LanguageConceptSwitch.OpLogicalAnd:
        return myConceptOpLogicalAnd;
      case LanguageConceptSwitch.OpLogicalEqual:
        return myConceptOpLogicalEqual;
      case LanguageConceptSwitch.OpLogicalNot:
        return myConceptOpLogicalNot;
      case LanguageConceptSwitch.OpLogicalNotEqual:
        return myConceptOpLogicalNotEqual;
      case LanguageConceptSwitch.OpLogicalOr:
        return myConceptOpLogicalOr;
      case LanguageConceptSwitch.OpLoopMerge:
        return myConceptOpLoopMerge;
      case LanguageConceptSwitch.OpMemberDecorate:
        return myConceptOpMemberDecorate;
      case LanguageConceptSwitch.OpMemberName:
        return myConceptOpMemberName;
      case LanguageConceptSwitch.OpMemoryModel:
        return myConceptOpMemoryModel;
      case LanguageConceptSwitch.OpModuleProcessed:
        return myConceptOpModuleProcessed;
      case LanguageConceptSwitch.OpName:
        return myConceptOpName;
      case LanguageConceptSwitch.OpNot:
        return myConceptOpNot;
      case LanguageConceptSwitch.OpOrdered:
        return myConceptOpOrdered;
      case LanguageConceptSwitch.OpPhi:
        return myConceptOpPhi;
      case LanguageConceptSwitch.OpPtrAccessChain:
        return myConceptOpPtrAccessChain;
      case LanguageConceptSwitch.OpReturn:
        return myConceptOpReturn;
      case LanguageConceptSwitch.OpReturnValue:
        return myConceptOpReturnValue;
      case LanguageConceptSwitch.OpSGreaterThan:
        return myConceptOpSGreaterThan;
      case LanguageConceptSwitch.OpSGreaterThanEqual:
        return myConceptOpSGreaterThanEqual;
      case LanguageConceptSwitch.OpSLessThan:
        return myConceptOpSLessThan;
      case LanguageConceptSwitch.OpSLessThanEqual:
        return myConceptOpSLessThanEqual;
      case LanguageConceptSwitch.OpSelecetionMerge:
        return myConceptOpSelecetionMerge;
      case LanguageConceptSwitch.OpSelect:
        return myConceptOpSelect;
      case LanguageConceptSwitch.OpShiftLeftLogical:
        return myConceptOpShiftLeftLogical;
      case LanguageConceptSwitch.OpShiftRightArithmetic:
        return myConceptOpShiftRightArithmetic;
      case LanguageConceptSwitch.OpShiftRightLogical:
        return myConceptOpShiftRightLogical;
      case LanguageConceptSwitch.OpSignBitSet:
        return myConceptOpSignBitSet;
      case LanguageConceptSwitch.OpSource:
        return myConceptOpSource;
      case LanguageConceptSwitch.OpSourceContinued:
        return myConceptOpSourceContinued;
      case LanguageConceptSwitch.OpSourceExtension:
        return myConceptOpSourceExtension;
      case LanguageConceptSwitch.OpSpecConstant:
        return myConceptOpSpecConstant;
      case LanguageConceptSwitch.OpSpecConstantComposite:
        return myConceptOpSpecConstantComposite;
      case LanguageConceptSwitch.OpSpecConstantOp:
        return myConceptOpSpecConstantOp;
      case LanguageConceptSwitch.OpStore:
        return myConceptOpStore;
      case LanguageConceptSwitch.OpString:
        return myConceptOpString;
      case LanguageConceptSwitch.OpSwitch:
        return myConceptOpSwitch;
      case LanguageConceptSwitch.OpTerminateInvocation:
        return myConceptOpTerminateInvocation;
      case LanguageConceptSwitch.OpTypeBool:
        return myConceptOpTypeBool;
      case LanguageConceptSwitch.OpTypeDeviceEvent:
        return myConceptOpTypeDeviceEvent;
      case LanguageConceptSwitch.OpTypeEvent:
        return myConceptOpTypeEvent;
      case LanguageConceptSwitch.OpTypeFloat:
        return myConceptOpTypeFloat;
      case LanguageConceptSwitch.OpTypeForwardPointer:
        return myConceptOpTypeForwardPointer;
      case LanguageConceptSwitch.OpTypeImage:
        return myConceptOpTypeImage;
      case LanguageConceptSwitch.OpTypeInt:
        return myConceptOpTypeInt;
      case LanguageConceptSwitch.OpTypeMatrix:
        return myConceptOpTypeMatrix;
      case LanguageConceptSwitch.OpTypeNamedBarrier:
        return myConceptOpTypeNamedBarrier;
      case LanguageConceptSwitch.OpTypeOpaque:
        return myConceptOpTypeOpaque;
      case LanguageConceptSwitch.OpTypePipe:
        return myConceptOpTypePipe;
      case LanguageConceptSwitch.OpTypePipeStorage:
        return myConceptOpTypePipeStorage;
      case LanguageConceptSwitch.OpTypePointer:
        return myConceptOpTypePointer;
      case LanguageConceptSwitch.OpTypeQueue:
        return myConceptOpTypeQueue;
      case LanguageConceptSwitch.OpTypeReserveId:
        return myConceptOpTypeReserveId;
      case LanguageConceptSwitch.OpTypeReverseId:
        return myConceptOpTypeReverseId;
      case LanguageConceptSwitch.OpTypeSampledImage:
        return myConceptOpTypeSampledImage;
      case LanguageConceptSwitch.OpTypeSampler:
        return myConceptOpTypeSampler;
      case LanguageConceptSwitch.OpTypeVariable:
        return myConceptOpTypeVariable;
      case LanguageConceptSwitch.OpTypeVector:
        return myConceptOpTypeVector;
      case LanguageConceptSwitch.OpTypeVoid:
        return myConceptOpTypeVoid;
      case LanguageConceptSwitch.OpUGreaterThan:
        return myConceptOpUGreaterThan;
      case LanguageConceptSwitch.OpUGreaterThanEqual:
        return myConceptOpUGreaterThanEqual;
      case LanguageConceptSwitch.OpULessThan:
        return myConceptOpULessThan;
      case LanguageConceptSwitch.OpULessThanEqual:
        return myConceptOpULessThanEqual;
      case LanguageConceptSwitch.OpUnordered:
        return myConceptOpUnordered;
      case LanguageConceptSwitch.OpUnreachable:
        return myConceptOpUnreachable;
      case LanguageConceptSwitch.OpVariable:
        return myConceptOpVariable;
      case LanguageConceptSwitch.Operand:
        return myConceptOperand;
      case LanguageConceptSwitch.Path:
        return myConceptPath;
      case LanguageConceptSwitch.Result:
        return myConceptResult;
      case LanguageConceptSwitch.SelectionHeader:
        return myConceptSelectionHeader;
      case LanguageConceptSwitch.StorageClass:
        return myConceptStorageClass;
      case LanguageConceptSwitch.StorageClassAtomicCounter:
        return myConceptStorageClassAtomicCounter;
      case LanguageConceptSwitch.StorageClassBuffer:
        return myConceptStorageClassBuffer;
      case LanguageConceptSwitch.StorageClassCrossWorkgroup:
        return myConceptStorageClassCrossWorkgroup;
      case LanguageConceptSwitch.StorageClassFunction:
        return myConceptStorageClassFunction;
      case LanguageConceptSwitch.StorageClassHitAttributeKHR:
        return myConceptStorageClassHitAttributeKHR;
      case LanguageConceptSwitch.StorageClassHitAttributeNV:
        return myConceptStorageClassHitAttributeNV;
      case LanguageConceptSwitch.StorageClassImage:
        return myConceptStorageClassImage;
      case LanguageConceptSwitch.StorageClassIncomingPayloadNV:
        return myConceptStorageClassIncomingPayloadNV;
      case LanguageConceptSwitch.StorageClassIncomingRayPayloadKHR:
        return myConceptStorageClassIncomingRayPayloadKHR;
      case LanguageConceptSwitch.StorageClassInput:
        return myConceptStorageClassInput;
      case LanguageConceptSwitch.StorageClassOutput:
        return myConceptStorageClassOutput;
      case LanguageConceptSwitch.StorageClassPrivate:
        return myConceptStorageClassPrivate;
      case LanguageConceptSwitch.StorageClassPushConstant:
        return myConceptStorageClassPushConstant;
      case LanguageConceptSwitch.StorageClassRayPayloadKHR:
        return myConceptStorageClassRayPayloadKHR;
      case LanguageConceptSwitch.StorageClassRayPayloadNV:
        return myConceptStorageClassRayPayloadNV;
      case LanguageConceptSwitch.StorageClassShaderRecordBufferKHR:
        return myConceptStorageClassShaderRecordBufferKHR;
      case LanguageConceptSwitch.StorageClassShaderRecordBufferNV:
        return myConceptStorageClassShaderRecordBufferNV;
      case LanguageConceptSwitch.StorageClassTileImageEXT:
        return myConceptStorageClassTileImageEXT;
      case LanguageConceptSwitch.StorageClassUniform:
        return myConceptStorageClassUniform;
      case LanguageConceptSwitch.StorageClassUniformConstant:
        return myConceptStorageClassUniformConstant;
      case LanguageConceptSwitch.StorageClassWorkgroup:
        return myConceptStorageClassWorkgroup;
      case LanguageConceptSwitch.StructuredControlFlowEdge:
        return myConceptStructuredControlFlowEdge;
      case LanguageConceptSwitch.StructuredControlFlowPath:
        return myConceptStructuredControlFlowPath;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.TypeAbstract:
        return myConceptTypeAbstract;
      case LanguageConceptSwitch.TypeAggregate:
        return myConceptTypeAggregate;
      case LanguageConceptSwitch.TypeArray:
        return myConceptTypeArray;
      case LanguageConceptSwitch.TypeBoolean:
        return myConceptTypeBoolean;
      case LanguageConceptSwitch.TypeComposite:
        return myConceptTypeComposite;
      case LanguageConceptSwitch.TypeDeclaration:
        return myConceptTypeDeclaration;
      case LanguageConceptSwitch.TypeFloatingPoint:
        return myConceptTypeFloatingPoint;
      case LanguageConceptSwitch.TypeImage:
        return myConceptTypeImage;
      case LanguageConceptSwitch.TypeInteger:
        return myConceptTypeInteger;
      case LanguageConceptSwitch.TypeLogicalointer:
        return myConceptTypeLogicalointer;
      case LanguageConceptSwitch.TypeMatrix:
        return myConceptTypeMatrix;
      case LanguageConceptSwitch.TypeNumerical:
        return myConceptTypeNumerical;
      case LanguageConceptSwitch.TypeOpaque:
        return myConceptTypeOpaque;
      case LanguageConceptSwitch.TypePhysicalPointer:
        return myConceptTypePhysicalPointer;
      case LanguageConceptSwitch.TypeSampler:
        return myConceptTypeSampler;
      case LanguageConceptSwitch.TypeScalar:
        return myConceptTypeScalar;
      case LanguageConceptSwitch.TypeStructure:
        return myConceptTypeStructure;
      case LanguageConceptSwitch.TypeVector:
        return myConceptTypeVector;
      case LanguageConceptSwitch.VariablePointer:
        return myConceptVariablePointer;
      case LanguageConceptSwitch.WordCount:
        return myConceptWordCount;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAnnotationInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "AnnotationInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b7a071L);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785905");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBackEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "BackEdge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77de5L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777061");
    b.version(3);
    b.aggregate("source", 0x1f77f80cb3b77de6L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777062").done();
    b.aggregate("target", 0x1f77f80cb3b77de7L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777063").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBackEdgeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "BackEdgeBlock", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f54L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Block
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785620");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Block", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724186");
    b.version(3);
    b.aggregate("label", 0x1f77f80cb3b79fb0L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5dL).optional(false).ordered(true).multiple(false).origin("2267553670842785712").done();
    b.aggregate("instructions", 0x1f77f80cb3b79fdfL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL).optional(true).ordered(true).multiple(true).origin("2267553670842785759").done();
    b.aggregate("termination", 0x1f77f80cb3b79fe3L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L).optional(false).ordered(true).multiple(false).origin("2267553670842785763").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockTerminationInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "BlockTerminationInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724199");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranchEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "BranchEdge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dc4L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777028");
    b.version(3);
    b.aggregate("source", 0x1f77f80cb3b77dc6L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777030").done();
    b.aggregate("target", 0x1f77f80cb3b77dcdL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777037").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranchInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "BranchInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dbfL);
    b.class_(false, true, false);
    // extends: SPIRV.structure.BlockTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777023");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForByte() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Byte", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afbeL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724286");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCallableDataKHR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CallableDataKHR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfe8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756520");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCallableDataNV() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CallableDataNV", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfeaL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756522");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabiiltySampleRateShading() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabiiltySampleRateShading", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6917L);
    b.class_(true, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926807");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabiityAtomicInt64() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabiityAtomicInt64", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03303L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978499");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabiityGenericPointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabiityGenericPointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af691dL);
    b.class_(true, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926813");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabiityImageRect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabiityImageRect", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6919L);
    b.class_(true, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926809");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabiityInputAttachment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabiityInputAttachment", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6923L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926819");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilithyAtomicInt16() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilithyAtomicInt16", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03308L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978504");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapability() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Capability", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.class_(false, true, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435905632");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAddresses() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAddresses", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68d8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926744");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicFloat32Add() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicFloat32Add", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b032f1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978481");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicFloat32MinMax() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicFloat32MinMax", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b032f3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978483");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicFloat64Add() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicFloat64Add", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b032f5L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978485");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicFloat64MinMax() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicFloat64MinMax", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b032f7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978487");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicInt32() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicInt32", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03306L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978502");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicInt8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicInt8", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b0330aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978506");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityAtomicStorage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityAtomicStorage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68f8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926776");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityClipDistance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityClipDistance", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6910L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926800");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityCullDistance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityCullDistance", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6913L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926803");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityDerivativeControl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityDerivativeControl", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b032ffL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978495");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityDeviceEnqueue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityDeviceEnqueue", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68f4L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926772");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityDeviceGroup() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityDeviceGroup", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03301L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978497");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityFloat16() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityFloat16", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68e3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926755");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityFloat16Buffer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityFloat16Buffer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68e1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926753");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityFloat64() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityFloat64", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af692aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926826");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGenericPointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGenericPointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af691fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926815");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGeometry() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGeometry", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68d4L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926740");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGeometryPointSize() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGeometryPointSize", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68feL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926782");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGeometryStreams() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGeometryStreams", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcba3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952035");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroupNonUniform() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroupNonUniform", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03313L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978515");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroupNonUniformBallot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroupNonUniformBallot", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03317L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978519");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroupNonUniformRelative() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroupNonUniformRelative", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b0331bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978523");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroupNonUniformShuffle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroupNonUniformShuffle", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03319L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978521");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroupNonUniformShuffleRelative() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroupNonUniformShuffleRelative", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b0331dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978525");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroupNonUniformVote() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroupNonUniformVote", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03315L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978517");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityGroups() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityGroups", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68f2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926770");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageBasic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageBasic", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68e9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926761");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageBuffer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageBuffer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6933L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926835");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageCubeArray() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageCubeArray", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6915L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926805");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageGatherExtended() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageGatherExtended", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6900L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926784");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageMSArray() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageMSArray", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6935L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926837");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageMipmap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageMipmap", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68edL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926765");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageReadWithoutFormat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageReadWithoutFormat", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcba8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952040");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityImageReadWrite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityImageReadWrite", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68ebL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926763");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityInputAttachment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityInputAttachment", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcba5L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952037");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityInt16() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityInt16", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68faL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926778");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityInt64() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityInt64", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af692eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926830");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityInt64Atomics() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityInt64Atomics", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68e7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926759");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityInt8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityInt8", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6921L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926817");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityInterpolationFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityInterpolationFunction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcb9eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952030");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityKernel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityKernel", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68ddL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926749");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityLinkage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityLinkage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68daL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926746");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityLiteralSampler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityLiteralSampler", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68f6L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926774");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityMatrix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityMatrix", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1662L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435905634");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityMintLod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityMintLod", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6927L);
    b.class_(true, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926823");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityMultiViewPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityMultiViewPort", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b0330cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978508");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityPipes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityPipes", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68f0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926768");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampled1D() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampled1D", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbaeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952046");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampled2D() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampled2D", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbb0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952048");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampled3D() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampled3D", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbb2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952050");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampledBuffer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampledBuffer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b032f9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978489");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampledCube() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampledCube", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbb4L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952052");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampledImageArrayDynamicIndexing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampledImageArrayDynamicIndexing", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6908L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926792");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySampledRect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySampledRect", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af691bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926811");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityShader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityShader", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1664L);
    b.class_(true, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435905636");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityShaderLayer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityShaderLayer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b0330eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978510");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityShaderViewPortIndex() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityShaderViewPortIndex", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3b03310L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435978512");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilitySparseResidency() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilitySparseResidency", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6925L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926821");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageBufferArrayDynamicIndexing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageBufferArrayDynamicIndexing", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af690cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926796");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageBuffrer16BitAccess() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageBuffrer16BitAccess", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbb7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952055");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageImageArrayDynamicIndexing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageImageArrayDynamicIndexing", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af690eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926798");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageImageExtendedFormats() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageImageExtendedFormats", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6937L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926839");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageImageMultisample() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageImageMultisample", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6902L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926786");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageImageReadWithoutFormat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageImageReadWithoutFormat", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbaaL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952042");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityStorageImageWriteWithoutFormat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityStorageImageWriteWithoutFormat", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbacL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952044");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityTesselation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityTesselation", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68d6L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926742");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityTesselationPointSize() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityTesselationPointSize", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68fcL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926780");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityTransformFeedback() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityTransformFeedback", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcba0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952032");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityUniformBuffer16BitAccess() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityUniformBuffer16BitAccess", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3afcbb9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435952057");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityUniformBufferArrayDynammicIndexingBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityUniformBufferArrayDynammicIndexingBlock", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af6905L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926789");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityVector16() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "CapabilityVector16", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af68dfL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Capability
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3af1660L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435926751");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstantInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "ConstantInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b000L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724352");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContinueEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "ContinueEdge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dd8L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777048");
    b.version(3);
    b.aggregate("source", 0x1f77f80cb3b77dd9L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777049").done();
    b.aggregate("target", 0x1f77f80cb3b77ddaL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777050").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDebugInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "DebugInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785711");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDecoration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Decoration", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6aff8L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724344");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntryPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "EntryPoint", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af58L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724184");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExecutionModeDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "ExecutionModeDeclaration", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f97L);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785687");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionTerminationInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "FunctionTerminationInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724191");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHeaderBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "HeaderBlock", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Block
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724215");
    b.version(3);
    b.aggregate("MergeInstrucion", 0x1f77f80cb3b6af78L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L).optional(true).ordered(true).multiple(false).origin("2267553670842724216").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Id", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Operand
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724246");
    b.version(3);
    b.aggregate("value", 0x1f77f80cb3b6afb4L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afadL).optional(false).ordered(true).multiple(false).origin("2267553670842724276").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncomingCallableDataKHR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "IncomingCallableDataKHR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfecL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756524");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncomingCallableDataNV() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "IncomingCallableDataNV", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfeeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756526");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Instruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724188");
    b.version(3);
    b.property("id", 0x1f77f80cb3b6afa7L).type(PrimitiveTypeId.INTEGER).origin("2267553670842724263").done();
    b.aggregate("WordCount", 0x1f77f80cb3b6afd5L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afcaL).optional(false).ordered(true).multiple(false).origin("2267553670842724309").done();
    b.aggregate("OpCode", 0x1f77f80cb3b6afdfL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afe2L).optional(false).ordered(true).multiple(false).origin("2267553670842724319").done();
    b.aggregate("ResultId", 0x1f77f80cb3b6afe6L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L).optional(true).ordered(true).multiple(false).origin("2267553670842724326").done();
    b.aggregate("InstructionType", 0x1f77f80cb3b6afeaL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L).optional(true).ordered(true).multiple(false).origin("2267553670842724330").done();
    b.aggregate("Operands", 0x1f77f80cb3b6aff1L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L).optional(true).ordered(true).multiple(true).origin("2267553670842724337").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Literal", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afbcL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Operand
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724284");
    b.version(3);
    b.aggregate("bytes", 0x1f77f80cb3b6afbfL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afbeL).optional(true).ordered(true).multiple(true).origin("2267553670842724287").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLoopHeader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "LoopHeader", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af7bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.HeaderBlock
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724219");
    b.version(3);
    b.aggregate("MergeInstruction", 0x1f77f80cb3b6af7dL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af75L).optional(true).ordered(true).multiple(false).origin("2267553670842724221").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMemoryObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MemoryObject", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6affcL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724348");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMemoryObjectDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MemoryObjectDeclaration", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6affeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724350");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMergeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MergeBlock", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af83L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724227");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMergeEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MergeEdge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dd1L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777041");
    b.version(3);
    b.aggregate("source", 0x1f77f80cb3b77dd2L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777042").done();
    b.aggregate("target", 0x1f77f80cb3b77dd4L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777044").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMergeInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MergeInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724209");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Module", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b65a3fL);
    b.class_(false, false, true);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842702399");
    b.version(3);
    b.aggregate("Capabilities", 0x1f77f80cb3b79f64L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af90L).optional(true).ordered(true).multiple(true).origin("2267553670842785636").done();
    b.aggregate("Extensions", 0x1f77f80cb3b79f69L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f6eL).optional(true).ordered(true).multiple(true).origin("2267553670842785641").done();
    b.aggregate("Imports", 0x1f77f80cb3b79f7eL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f7bL).optional(true).ordered(true).multiple(true).origin("2267553670842785662").done();
    b.aggregate("MemoryModel", 0x1f77f80cb3b79f85L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f8cL).optional(false).ordered(true).multiple(false).origin("2267553670842785669").done();
    b.aggregate("EntryPoints", 0x1f77f80cb3b79feeL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f95L).optional(true).ordered(true).multiple(true).origin("2267553670842785774").done();
    b.aggregate("ExecutionModes", 0x1f77f80cb3b79ff6L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f97L).optional(true).ordered(true).multiple(true).origin("2267553670842785782").done();
    b.aggregate("Strings", 0x1f77f80cb3b79ffeL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fadL).optional(true).ordered(true).multiple(true).origin("2267553670842785790").done();
    b.aggregate("SourceExtensions", 0x1f77f80cb3b7a007L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fbaL).optional(true).ordered(true).multiple(true).origin("2267553670842785799").done();
    b.aggregate("Sources", 0x1f77f80cb3b7a011L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fbcL).optional(true).ordered(true).multiple(true).origin("2267553670842785809").done();
    b.aggregate("SourceContinued", 0x1f77f80cb3b7a01cL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fbeL).optional(true).ordered(true).multiple(true).origin("2267553670842785820").done();
    b.aggregate("Name", 0x1f77f80cb3b7a028L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fc0L).optional(true).ordered(true).multiple(true).origin("2267553670842785832").done();
    b.aggregate("MemberName", 0x1f77f80cb3b7a035L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fc1L).optional(true).ordered(true).multiple(true).origin("2267553670842785845").done();
    b.aggregate("ModuleProcessed", 0x1f77f80cb3b7a054L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b7a052L).optional(true).ordered(true).multiple(true).origin("2267553670842785876").done();
    b.aggregate("Annotations", 0x1f77f80cb3b7a072L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b7a071L).optional(true).ordered(true).multiple(true).origin("2267553670842785906").done();
    b.aggregate("TypeDeclarations", 0x4a02975cc3acc98fL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accf96L).optional(true).ordered(true).multiple(true).origin("5332991333435754895").done();
    b.aggregate("ConstantInstructions", 0x4a02975cc3accf97L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b000L).optional(true).ordered(true).multiple(true).origin("5332991333435756439").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeOutputPayloadAMDX() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "NodeOutputPayloadAMDX", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfe6L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756518");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodePayloadAMDX() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "NodePayloadAMDX", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfe4L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756516");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonSemanticInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "NonSemanticInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b002L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724354");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumericalName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "NumericalName", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afadL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724269");
    b.version(3);
    b.property("value", 0x1f77f80cb3b6afb0L).type(PrimitiveTypeId.INTEGER).origin("2267553670842724272").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Object", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6affaL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724346");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpAll() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpAll", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58caL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857098");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpAny() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpAny", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58c8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857096");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitCount() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitCount", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58c6L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857094");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitFieldInsert() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitFieldInsert", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58bdL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857085");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitFieldSExtract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitFieldSExtract", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58c0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857088");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitFieldUExtract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitFieldUExtract", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58c2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857090");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitReverse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitReverse", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58c4L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857092");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitwiseAnd() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitwiseAnd", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58b9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857081");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitwiseOr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitwiseOr", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58b5L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857077");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBitwiseXOR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBitwiseXOR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58b7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857079");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBranch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBranch", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af69L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.BranchInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dbfL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724201");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBranchConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBranchConditional", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af6dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.BranchInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dbfL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724205");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpCapability() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpCapability", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af90L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724240");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpCode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpCode", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afe2L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724322");
    b.version(3);
    b.property("value", 0x1f77f80cb3b6afe3L).type(PrimitiveTypeId.INTEGER).origin("2267553670842724323").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstant", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cc8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841736");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstantComposite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstantComposite", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1ccaL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841738");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstantFalse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstantFalse", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1ccfL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841743");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstantNull() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstantNull", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b053L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724435");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstantSampler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstantSampler", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cccL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841740");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstantTrue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstantTrue", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cceL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841742");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpDecorate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpDecorate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5862L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435856994");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpDecorateId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpDecorateId", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae586dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857005");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpDecorateString() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpDecorateString", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae586fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857007");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpDecorationGroup() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpDecorationGroup", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5865L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435856997");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpEntryPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpEntryPoint", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f95L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785685");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpExecutionMode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpExecutionMode", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f99L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.ExecutionModeDeclaration
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f97L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785689");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpExecutionModeId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpExecutionModeId", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f9aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.ExecutionModeDeclaration
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f97L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785690");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpExtInst() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpExtInst", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5871L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857009");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpExtInstImport() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpExtInstImport", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f7bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785659");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpExtension", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f6eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785646");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFOrdEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFOrdEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5894L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857044");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFOrdGreaterThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFOrdGreaterThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58a1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857057");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFOrdGreaterThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFOrdGreaterThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58a9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857065");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFOrdLessThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFOrdLessThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae589cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857052");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFOrdLessThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFOrdLessThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58a5L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857061");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFOrdNotEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFOrdNotEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5898L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857048");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFUnorcGreaterThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFUnorcGreaterThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58acL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857068");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFUnordEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFUnordEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5896L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857046");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFUnordGreaterThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFUnordGreaterThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58a3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857059");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFUnordLessThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFUnordLessThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae589eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857054");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFUnordLessThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFUnordLessThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58a7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857063");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFUnordNotEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFUnordNotEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae589aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857050");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFunction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cd7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841751");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFunctionCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFunctionCall", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b04cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724428");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFunctionEnd() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFunctionEnd", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cdbL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841755");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFunctionParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFunctionParameter", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cd9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841753");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpGroupDecorate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpGroupDecorate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5867L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435856999");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpGroupMemberDecorate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpGroupMemberDecorate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae586bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857003");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpIEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpIEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae587fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857023");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpINotEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpINotEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5881L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857025");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpIsFinite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpIsFinite", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58d1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857105");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpIsInf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpIsInf", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58cfL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857103");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpIsNan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpIsNan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58ccL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857100");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpIsNormal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpIsNormal", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58d3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857107");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpKill() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpKill", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af65L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724197");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLabel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLabel", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724189");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLessOrGreater() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLessOrGreater", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58d7L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857111");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLoad() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLoad", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae585fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435856991");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLogicalAnd() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLogicalAnd", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5879L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857017");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLogicalEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLogicalEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5873L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857011");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLogicalNot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLogicalNot", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae587bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857019");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLogicalNotEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLogicalNotEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5875L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857013");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLogicalOr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLogicalOr", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5877L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857015");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLoopMerge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLoopMerge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af75L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.MergeInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724213");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpMemberDecorate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpMemberDecorate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5863L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435856995");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpMemberName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpMemberName", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fc1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.DebugInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785729");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpMemoryModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpMemoryModel", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f8cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785676");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpModuleProcessed() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpModuleProcessed", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b7a052L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785874");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpName", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fc0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.DebugInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785728");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpNot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpNot", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58bbL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857083");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpOrdered() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpOrdered", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58d9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857113");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpPhi() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpPhi", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b04aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724426");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpPtrAccessChain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpPtrAccessChain", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b04fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724431");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpReturn() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpReturn", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b058L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724440");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpReturnValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpReturnValue", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af63L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724195");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSGreaterThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSGreaterThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5885L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857029");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSGreaterThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSGreaterThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5889L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857033");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSLessThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSLessThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae588dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857037");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSLessThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSLessThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5892L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857042");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSelecetionMerge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSelecetionMerge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af73L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.MergeInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724211");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSelect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSelect", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae587dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857021");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpShiftLeftLogical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpShiftLeftLogical", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58b3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857075");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpShiftRightArithmetic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpShiftRightArithmetic", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58b1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857073");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpShiftRightLogical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpShiftRightLogical", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58afL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857071");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSignBitSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSignBitSet", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58d5L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857109");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSource() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSource", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fbcL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.DebugInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785724");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSourceContinued() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSourceContinued", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fbeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.DebugInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785726");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSourceExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSourceExtension", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fbaL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.DebugInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785722");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSpecConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSpecConstant", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cd1L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841745");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSpecConstantComposite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSpecConstantComposite", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cd3L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841747");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSpecConstantOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSpecConstantOp", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae1cd5L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435841749");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpStore() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpStore", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5860L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435856992");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpString() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpString", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fadL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.DebugInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79fafL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785709");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSwitch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSwitch", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af6fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.BranchInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dbfL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724207");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTerminateInvocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTerminateInvocation", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dbdL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777021");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeBool() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeBool", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b021L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeAbstract
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01eL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724385");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeDeviceEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeDeviceEvent", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b034L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724404");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeEvent", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b030L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724400");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeFloat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeFloat", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd008L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756552");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeForwardPointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeForwardPointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b041L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724417");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b028L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724392");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeInt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeInt", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd006L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756550");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeMatrix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeMatrix", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd00eL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756558");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeNamedBarrier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeNamedBarrier", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b046L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724422");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeOpaque() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeOpaque", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b02eL);
    b.class_(true, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724398");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypePipe() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypePipe", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b03fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724415");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypePipeStorage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypePipeStorage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b043L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724419");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypePointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypePointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd00aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756554");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeQueue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeQueue", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b03cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724412");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeReserveId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeReserveId", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b03aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724410");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeReverseId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeReverseId", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b036L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724406");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeSampledImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeSampledImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b02cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724396");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeSampler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeSampler", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b02aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724394");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeVariable", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd012L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756562");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeVector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeVector", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd00cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756556");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeVoid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeVoid", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfa9L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeDeclaration
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accf96L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756457");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpUGreaterThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpUGreaterThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5883L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857027");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpUGreaterThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpUGreaterThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae5887L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857031");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpULessThan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpULessThan", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae588bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857035");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpULessThanEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpULessThanEqual", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae588fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857039");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpUnordered() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpUnordered", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3ae58dbL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435857115");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpUnreachable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpUnreachable", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77dbbL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777019");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpVariable", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfbeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756478");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Operand", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L);
    b.class_(false, true, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724290");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPath() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Path", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f56L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785622");
    b.version(3);
    b.aggregate("blocks", 0x1f77f80cb3b79f57L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(true).origin("2267553670842785623").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResult() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Result", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afb7L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724279");
    b.version(3);
    b.aggregate("id", 0x1f77f80cb3b6afb9L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L).optional(false).ordered(true).multiple(false).origin("2267553670842724281").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectionHeader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "SelectionHeader", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af80L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.HeaderBlock
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724224");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClass", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756480");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassAtomicCounter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassAtomicCounter", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfdcL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756508");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassBuffer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassBuffer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfe0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756512");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassCrossWorkgroup() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassCrossWorkgroup", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfd4L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756500");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassFunction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfd8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756504");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassHitAttributeKHR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassHitAttributeKHR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accff6L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756534");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassHitAttributeNV() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassHitAttributeNV", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accff8L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756536");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfdeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756510");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassIncomingPayloadNV() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassIncomingPayloadNV", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfffL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756543");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassIncomingRayPayloadKHR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassIncomingRayPayloadKHR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accffcL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756540");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassInput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassInput", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfcbL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756491");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassOutput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassOutput", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfd0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756496");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassPrivate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassPrivate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfd6L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756502");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassPushConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassPushConstant", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfdaL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756506");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassRayPayloadKHR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassRayPayloadKHR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accff0L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756528");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassRayPayloadNV() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassRayPayloadNV", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accff2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756530");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassShaderRecordBufferKHR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassShaderRecordBufferKHR", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd001L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756545");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassShaderRecordBufferNV() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassShaderRecordBufferNV", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3acd004L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756548");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassTileImageEXT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassTileImageEXT", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfe2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756514");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassUniform() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassUniform", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfceL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756494");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassUniformConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassUniformConstant", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756482");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageClassWorkgroup() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StorageClassWorkgroup", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfd2L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.StorageClass
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accfc0L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756498");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructuredControlFlowEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StructuredControlFlowEdge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b77de0L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842777056");
    b.version(3);
    b.aggregate("source", 0x1f77f80cb3b77de2L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777058").done();
    b.aggregate("target", 0x1f77f80cb3b77de3L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL).optional(false).ordered(true).multiple(false).origin("2267553670842777059").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructuredControlFlowPath() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "StructuredControlFlowPath", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f5aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Path
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b79f56L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842785626");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Type", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.class_(false, true, false);
    // extends: SPIRV.structure.TypeDeclaration
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accf96L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724357");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAbstract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeAbstract", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01eL);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724382");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeAggregate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b016L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724374");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeArray() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeArray", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b013L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724371");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeBoolean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeBoolean", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b004L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724356");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeComposite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeComposite", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b018L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724376");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeDeclaration", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x4a02975cc3accf96L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/5332991333435756438");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeFloatingPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeFloatingPoint", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b009L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724361");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724378");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeInteger", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b007L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724359");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeLogicalointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeLogicalointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b023L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724387");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeMatrix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeMatrix", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b011L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724369");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeNumerical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeNumerical", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b00bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724363");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeOpaque() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeOpaque", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724390");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypePhysicalPointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypePhysicalPointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b024L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724388");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeSampler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeSampler", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724380");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeScalar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeScalar", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b00dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724365");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeStructure", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b015L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724373");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeVector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeVector", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b00fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724367");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariablePointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "VariablePointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b051L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724433");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWordCount() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "WordCount", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afcaL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724298");
    b.version(3);
    b.property("value", 0x1f77f80cb3b6afcbL).type(PrimitiveTypeId.INTEGER).origin("2267553670842724299").done();
    return b.create();
  }
}
