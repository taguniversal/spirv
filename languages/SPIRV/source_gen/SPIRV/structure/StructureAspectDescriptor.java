package SPIRV.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBlock = createDescriptorForBlock();
  /*package*/ final ConceptDescriptor myConceptBlockTerminationInstruction = createDescriptorForBlockTerminationInstruction();
  /*package*/ final ConceptDescriptor myConceptByte = createDescriptorForByte();
  /*package*/ final ConceptDescriptor myConceptConstantInstruction = createDescriptorForConstantInstruction();
  /*package*/ final ConceptDescriptor myConceptDecoration = createDescriptorForDecoration();
  /*package*/ final ConceptDescriptor myConceptEntryPoint = createDescriptorForEntryPoint();
  /*package*/ final ConceptDescriptor myConceptFunctionTerminationInstruction = createDescriptorForFunctionTerminationInstruction();
  /*package*/ final ConceptDescriptor myConceptHeaderBlock = createDescriptorForHeaderBlock();
  /*package*/ final ConceptDescriptor myConceptId = createDescriptorForId();
  /*package*/ final ConceptDescriptor myConceptInstruction = createDescriptorForInstruction();
  /*package*/ final ConceptDescriptor myConceptLiteral = createDescriptorForLiteral();
  /*package*/ final ConceptDescriptor myConceptLoopHeader = createDescriptorForLoopHeader();
  /*package*/ final ConceptDescriptor myConceptMemoryObject = createDescriptorForMemoryObject();
  /*package*/ final ConceptDescriptor myConceptMemoryObjectDeclaration = createDescriptorForMemoryObjectDeclaration();
  /*package*/ final ConceptDescriptor myConceptMergeBlock = createDescriptorForMergeBlock();
  /*package*/ final ConceptDescriptor myConceptMergeInstruction = createDescriptorForMergeInstruction();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptNonSemanticInstruction = createDescriptorForNonSemanticInstruction();
  /*package*/ final ConceptDescriptor myConceptNumericalName = createDescriptorForNumericalName();
  /*package*/ final ConceptDescriptor myConceptObject = createDescriptorForObject();
  /*package*/ final ConceptDescriptor myConceptOpBranch = createDescriptorForOpBranch();
  /*package*/ final ConceptDescriptor myConceptOpBranchConditional = createDescriptorForOpBranchConditional();
  /*package*/ final ConceptDescriptor myConceptOpCapability = createDescriptorForOpCapability();
  /*package*/ final ConceptDescriptor myConceptOpCode = createDescriptorForOpCode();
  /*package*/ final ConceptDescriptor myConceptOpConstantNull = createDescriptorForOpConstantNull();
  /*package*/ final ConceptDescriptor myConceptOpFunctionCall = createDescriptorForOpFunctionCall();
  /*package*/ final ConceptDescriptor myConceptOpKill = createDescriptorForOpKill();
  /*package*/ final ConceptDescriptor myConceptOpLabel = createDescriptorForOpLabel();
  /*package*/ final ConceptDescriptor myConceptOpLoopMerge = createDescriptorForOpLoopMerge();
  /*package*/ final ConceptDescriptor myConceptOpPhi = createDescriptorForOpPhi();
  /*package*/ final ConceptDescriptor myConceptOpPtrAccessChain = createDescriptorForOpPtrAccessChain();
  /*package*/ final ConceptDescriptor myConceptOpReturn = createDescriptorForOpReturn();
  /*package*/ final ConceptDescriptor myConceptOpReturnValue = createDescriptorForOpReturnValue();
  /*package*/ final ConceptDescriptor myConceptOpSelecetionMerge = createDescriptorForOpSelecetionMerge();
  /*package*/ final ConceptDescriptor myConceptOpSelect = createDescriptorForOpSelect();
  /*package*/ final ConceptDescriptor myConceptOpSwitch = createDescriptorForOpSwitch();
  /*package*/ final ConceptDescriptor myConceptOpTypeBool = createDescriptorForOpTypeBool();
  /*package*/ final ConceptDescriptor myConceptOpTypeDeviceEvent = createDescriptorForOpTypeDeviceEvent();
  /*package*/ final ConceptDescriptor myConceptOpTypeEvent = createDescriptorForOpTypeEvent();
  /*package*/ final ConceptDescriptor myConceptOpTypeForwardPointer = createDescriptorForOpTypeForwardPointer();
  /*package*/ final ConceptDescriptor myConceptOpTypeImage = createDescriptorForOpTypeImage();
  /*package*/ final ConceptDescriptor myConceptOpTypeNamedBarrier = createDescriptorForOpTypeNamedBarrier();
  /*package*/ final ConceptDescriptor myConceptOpTypeOpaque = createDescriptorForOpTypeOpaque();
  /*package*/ final ConceptDescriptor myConceptOpTypePipe = createDescriptorForOpTypePipe();
  /*package*/ final ConceptDescriptor myConceptOpTypePipeStorage = createDescriptorForOpTypePipeStorage();
  /*package*/ final ConceptDescriptor myConceptOpTypeQueue = createDescriptorForOpTypeQueue();
  /*package*/ final ConceptDescriptor myConceptOpTypeReserveId = createDescriptorForOpTypeReserveId();
  /*package*/ final ConceptDescriptor myConceptOpTypeReverseId = createDescriptorForOpTypeReverseId();
  /*package*/ final ConceptDescriptor myConceptOpTypeSampledImage = createDescriptorForOpTypeSampledImage();
  /*package*/ final ConceptDescriptor myConceptOpTypeSampler = createDescriptorForOpTypeSampler();
  /*package*/ final ConceptDescriptor myConceptOpTypeVoid = createDescriptorForOpTypeVoid();
  /*package*/ final ConceptDescriptor myConceptOperand = createDescriptorForOperand();
  /*package*/ final ConceptDescriptor myConceptResult = createDescriptorForResult();
  /*package*/ final ConceptDescriptor myConceptSelectionHeader = createDescriptorForSelectionHeader();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptTypeAbstract = createDescriptorForTypeAbstract();
  /*package*/ final ConceptDescriptor myConceptTypeAggregate = createDescriptorForTypeAggregate();
  /*package*/ final ConceptDescriptor myConceptTypeArray = createDescriptorForTypeArray();
  /*package*/ final ConceptDescriptor myConceptTypeBoolean = createDescriptorForTypeBoolean();
  /*package*/ final ConceptDescriptor myConceptTypeComposite = createDescriptorForTypeComposite();
  /*package*/ final ConceptDescriptor myConceptTypeFloatingPoint = createDescriptorForTypeFloatingPoint();
  /*package*/ final ConceptDescriptor myConceptTypeImage = createDescriptorForTypeImage();
  /*package*/ final ConceptDescriptor myConceptTypeInteger = createDescriptorForTypeInteger();
  /*package*/ final ConceptDescriptor myConceptTypeLogicalointer = createDescriptorForTypeLogicalointer();
  /*package*/ final ConceptDescriptor myConceptTypeMatrix = createDescriptorForTypeMatrix();
  /*package*/ final ConceptDescriptor myConceptTypeNumerical = createDescriptorForTypeNumerical();
  /*package*/ final ConceptDescriptor myConceptTypeOpaque = createDescriptorForTypeOpaque();
  /*package*/ final ConceptDescriptor myConceptTypePhysicalPointer = createDescriptorForTypePhysicalPointer();
  /*package*/ final ConceptDescriptor myConceptTypeSampler = createDescriptorForTypeSampler();
  /*package*/ final ConceptDescriptor myConceptTypeScalar = createDescriptorForTypeScalar();
  /*package*/ final ConceptDescriptor myConceptTypeStructure = createDescriptorForTypeStructure();
  /*package*/ final ConceptDescriptor myConceptTypeVector = createDescriptorForTypeVector();
  /*package*/ final ConceptDescriptor myConceptVariablePointer = createDescriptorForVariablePointer();
  /*package*/ final ConceptDescriptor myConceptWordCount = createDescriptorForWordCount();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBlock, myConceptBlockTerminationInstruction, myConceptByte, myConceptConstantInstruction, myConceptDecoration, myConceptEntryPoint, myConceptFunctionTerminationInstruction, myConceptHeaderBlock, myConceptId, myConceptInstruction, myConceptLiteral, myConceptLoopHeader, myConceptMemoryObject, myConceptMemoryObjectDeclaration, myConceptMergeBlock, myConceptMergeInstruction, myConceptModule, myConceptNonSemanticInstruction, myConceptNumericalName, myConceptObject, myConceptOpBranch, myConceptOpBranchConditional, myConceptOpCapability, myConceptOpCode, myConceptOpConstantNull, myConceptOpFunctionCall, myConceptOpKill, myConceptOpLabel, myConceptOpLoopMerge, myConceptOpPhi, myConceptOpPtrAccessChain, myConceptOpReturn, myConceptOpReturnValue, myConceptOpSelecetionMerge, myConceptOpSelect, myConceptOpSwitch, myConceptOpTypeBool, myConceptOpTypeDeviceEvent, myConceptOpTypeEvent, myConceptOpTypeForwardPointer, myConceptOpTypeImage, myConceptOpTypeNamedBarrier, myConceptOpTypeOpaque, myConceptOpTypePipe, myConceptOpTypePipeStorage, myConceptOpTypeQueue, myConceptOpTypeReserveId, myConceptOpTypeReverseId, myConceptOpTypeSampledImage, myConceptOpTypeSampler, myConceptOpTypeVoid, myConceptOperand, myConceptResult, myConceptSelectionHeader, myConceptType, myConceptTypeAbstract, myConceptTypeAggregate, myConceptTypeArray, myConceptTypeBoolean, myConceptTypeComposite, myConceptTypeFloatingPoint, myConceptTypeImage, myConceptTypeInteger, myConceptTypeLogicalointer, myConceptTypeMatrix, myConceptTypeNumerical, myConceptTypeOpaque, myConceptTypePhysicalPointer, myConceptTypeSampler, myConceptTypeScalar, myConceptTypeStructure, myConceptTypeVector, myConceptVariablePointer, myConceptWordCount);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Block:
        return myConceptBlock;
      case LanguageConceptSwitch.BlockTerminationInstruction:
        return myConceptBlockTerminationInstruction;
      case LanguageConceptSwitch.Byte:
        return myConceptByte;
      case LanguageConceptSwitch.ConstantInstruction:
        return myConceptConstantInstruction;
      case LanguageConceptSwitch.Decoration:
        return myConceptDecoration;
      case LanguageConceptSwitch.EntryPoint:
        return myConceptEntryPoint;
      case LanguageConceptSwitch.FunctionTerminationInstruction:
        return myConceptFunctionTerminationInstruction;
      case LanguageConceptSwitch.HeaderBlock:
        return myConceptHeaderBlock;
      case LanguageConceptSwitch.Id:
        return myConceptId;
      case LanguageConceptSwitch.Instruction:
        return myConceptInstruction;
      case LanguageConceptSwitch.Literal:
        return myConceptLiteral;
      case LanguageConceptSwitch.LoopHeader:
        return myConceptLoopHeader;
      case LanguageConceptSwitch.MemoryObject:
        return myConceptMemoryObject;
      case LanguageConceptSwitch.MemoryObjectDeclaration:
        return myConceptMemoryObjectDeclaration;
      case LanguageConceptSwitch.MergeBlock:
        return myConceptMergeBlock;
      case LanguageConceptSwitch.MergeInstruction:
        return myConceptMergeInstruction;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.NonSemanticInstruction:
        return myConceptNonSemanticInstruction;
      case LanguageConceptSwitch.NumericalName:
        return myConceptNumericalName;
      case LanguageConceptSwitch.Object:
        return myConceptObject;
      case LanguageConceptSwitch.OpBranch:
        return myConceptOpBranch;
      case LanguageConceptSwitch.OpBranchConditional:
        return myConceptOpBranchConditional;
      case LanguageConceptSwitch.OpCapability:
        return myConceptOpCapability;
      case LanguageConceptSwitch.OpCode:
        return myConceptOpCode;
      case LanguageConceptSwitch.OpConstantNull:
        return myConceptOpConstantNull;
      case LanguageConceptSwitch.OpFunctionCall:
        return myConceptOpFunctionCall;
      case LanguageConceptSwitch.OpKill:
        return myConceptOpKill;
      case LanguageConceptSwitch.OpLabel:
        return myConceptOpLabel;
      case LanguageConceptSwitch.OpLoopMerge:
        return myConceptOpLoopMerge;
      case LanguageConceptSwitch.OpPhi:
        return myConceptOpPhi;
      case LanguageConceptSwitch.OpPtrAccessChain:
        return myConceptOpPtrAccessChain;
      case LanguageConceptSwitch.OpReturn:
        return myConceptOpReturn;
      case LanguageConceptSwitch.OpReturnValue:
        return myConceptOpReturnValue;
      case LanguageConceptSwitch.OpSelecetionMerge:
        return myConceptOpSelecetionMerge;
      case LanguageConceptSwitch.OpSelect:
        return myConceptOpSelect;
      case LanguageConceptSwitch.OpSwitch:
        return myConceptOpSwitch;
      case LanguageConceptSwitch.OpTypeBool:
        return myConceptOpTypeBool;
      case LanguageConceptSwitch.OpTypeDeviceEvent:
        return myConceptOpTypeDeviceEvent;
      case LanguageConceptSwitch.OpTypeEvent:
        return myConceptOpTypeEvent;
      case LanguageConceptSwitch.OpTypeForwardPointer:
        return myConceptOpTypeForwardPointer;
      case LanguageConceptSwitch.OpTypeImage:
        return myConceptOpTypeImage;
      case LanguageConceptSwitch.OpTypeNamedBarrier:
        return myConceptOpTypeNamedBarrier;
      case LanguageConceptSwitch.OpTypeOpaque:
        return myConceptOpTypeOpaque;
      case LanguageConceptSwitch.OpTypePipe:
        return myConceptOpTypePipe;
      case LanguageConceptSwitch.OpTypePipeStorage:
        return myConceptOpTypePipeStorage;
      case LanguageConceptSwitch.OpTypeQueue:
        return myConceptOpTypeQueue;
      case LanguageConceptSwitch.OpTypeReserveId:
        return myConceptOpTypeReserveId;
      case LanguageConceptSwitch.OpTypeReverseId:
        return myConceptOpTypeReverseId;
      case LanguageConceptSwitch.OpTypeSampledImage:
        return myConceptOpTypeSampledImage;
      case LanguageConceptSwitch.OpTypeSampler:
        return myConceptOpTypeSampler;
      case LanguageConceptSwitch.OpTypeVoid:
        return myConceptOpTypeVoid;
      case LanguageConceptSwitch.Operand:
        return myConceptOperand;
      case LanguageConceptSwitch.Result:
        return myConceptResult;
      case LanguageConceptSwitch.SelectionHeader:
        return myConceptSelectionHeader;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.TypeAbstract:
        return myConceptTypeAbstract;
      case LanguageConceptSwitch.TypeAggregate:
        return myConceptTypeAggregate;
      case LanguageConceptSwitch.TypeArray:
        return myConceptTypeArray;
      case LanguageConceptSwitch.TypeBoolean:
        return myConceptTypeBoolean;
      case LanguageConceptSwitch.TypeComposite:
        return myConceptTypeComposite;
      case LanguageConceptSwitch.TypeFloatingPoint:
        return myConceptTypeFloatingPoint;
      case LanguageConceptSwitch.TypeImage:
        return myConceptTypeImage;
      case LanguageConceptSwitch.TypeInteger:
        return myConceptTypeInteger;
      case LanguageConceptSwitch.TypeLogicalointer:
        return myConceptTypeLogicalointer;
      case LanguageConceptSwitch.TypeMatrix:
        return myConceptTypeMatrix;
      case LanguageConceptSwitch.TypeNumerical:
        return myConceptTypeNumerical;
      case LanguageConceptSwitch.TypeOpaque:
        return myConceptTypeOpaque;
      case LanguageConceptSwitch.TypePhysicalPointer:
        return myConceptTypePhysicalPointer;
      case LanguageConceptSwitch.TypeSampler:
        return myConceptTypeSampler;
      case LanguageConceptSwitch.TypeScalar:
        return myConceptTypeScalar;
      case LanguageConceptSwitch.TypeStructure:
        return myConceptTypeStructure;
      case LanguageConceptSwitch.TypeVector:
        return myConceptTypeVector;
      case LanguageConceptSwitch.VariablePointer:
        return myConceptVariablePointer;
      case LanguageConceptSwitch.WordCount:
        return myConceptWordCount;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Block", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724186");
    b.version(3);
    b.aggregate("header", 0x1f77f80cb3b6afcfL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L).optional(false).ordered(true).multiple(false).origin("2267553670842724303").done();
    b.aggregate("instructions", 0x1f77f80cb3b6afd1L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL).optional(true).ordered(true).multiple(true).origin("2267553670842724305").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockTerminationInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "BlockTerminationInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724199");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForByte() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Byte", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afbeL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724286");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstantInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "ConstantInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b000L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724352");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDecoration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Decoration", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6aff8L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724344");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntryPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "EntryPoint", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af58L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724184");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionTerminationInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "FunctionTerminationInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724191");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHeaderBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "HeaderBlock", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Block
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5aL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724215");
    b.version(3);
    b.aggregate("MergeInstrucion", 0x1f77f80cb3b6af78L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L).optional(true).ordered(true).multiple(false).origin("2267553670842724216").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Id", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Operand
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724246");
    b.version(3);
    b.aggregate("value", 0x1f77f80cb3b6afb4L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afadL).optional(false).ordered(true).multiple(false).origin("2267553670842724276").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Instruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724188");
    b.version(3);
    b.property("id", 0x1f77f80cb3b6afa7L).type(PrimitiveTypeId.INTEGER).origin("2267553670842724263").done();
    b.aggregate("WordCount", 0x1f77f80cb3b6afd5L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afcaL).optional(false).ordered(true).multiple(false).origin("2267553670842724309").done();
    b.aggregate("OpCode", 0x1f77f80cb3b6afdfL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afe2L).optional(false).ordered(true).multiple(false).origin("2267553670842724319").done();
    b.aggregate("ResultId", 0x1f77f80cb3b6afe6L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L).optional(true).ordered(true).multiple(false).origin("2267553670842724326").done();
    b.aggregate("InstructionType", 0x1f77f80cb3b6afeaL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L).optional(true).ordered(true).multiple(false).origin("2267553670842724330").done();
    b.aggregate("Operands", 0x1f77f80cb3b6aff1L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L).optional(true).ordered(true).multiple(true).origin("2267553670842724337").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Literal", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afbcL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Operand
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724284");
    b.version(3);
    b.aggregate("bytes", 0x1f77f80cb3b6afbfL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afbeL).optional(true).ordered(true).multiple(true).origin("2267553670842724287").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLoopHeader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "LoopHeader", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af7bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.HeaderBlock
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724219");
    b.version(3);
    b.aggregate("MergeInstruction", 0x1f77f80cb3b6af7dL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af75L).optional(true).ordered(true).multiple(false).origin("2267553670842724221").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMemoryObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MemoryObject", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6affcL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724348");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMemoryObjectDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MemoryObjectDeclaration", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6affeL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724350");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMergeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MergeBlock", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af83L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724227");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMergeInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "MergeInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724209");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Module", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b65a3fL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842702399");
    b.version(3);
    b.aggregate("EntryPoints", 0x1f77f80cb3b6af8bL).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af58L).optional(true).ordered(true).multiple(true).origin("2267553670842724235").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonSemanticInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "NonSemanticInstruction", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b002L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724354");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumericalName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "NumericalName", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afadL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724269");
    b.version(3);
    b.property("value", 0x1f77f80cb3b6afb0L).type(PrimitiveTypeId.INTEGER).origin("2267553670842724272").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Object", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6affaL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724346");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBranch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBranch", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af69L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.BlockTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724201");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpBranchConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpBranchConditional", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af6dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.BlockTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724205");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpCapability() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpCapability", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af90L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724240");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpCode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpCode", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afe2L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724322");
    b.version(3);
    b.property("value", 0x1f77f80cb3b6afe3L).type(PrimitiveTypeId.INTEGER).origin("2267553670842724323").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpConstantNull() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpConstantNull", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b053L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724435");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpFunctionCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpFunctionCall", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b04cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724428");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpKill() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpKill", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af65L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724197");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLabel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLabel", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724189");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpLoopMerge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpLoopMerge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af75L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.MergeInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724213");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpPhi() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpPhi", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b04aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724426");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpPtrAccessChain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpPtrAccessChain", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b04fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724431");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpReturn() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpReturn", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b058L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724440");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpReturnValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpReturnValue", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af63L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.FunctionTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5fL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724195");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSelecetionMerge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSelecetionMerge", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af73L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.MergeInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af71L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724211");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSelect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSelect", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b048L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Instruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af5cL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724424");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpSwitch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpSwitch", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af6fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.BlockTerminationInstruction
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af67L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724207");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeBool() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeBool", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b021L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeAbstract
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01eL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724385");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeDeviceEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeDeviceEvent", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b034L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724404");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeEvent", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b030L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724400");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeForwardPointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeForwardPointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b041L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724417");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b028L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724392");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeNamedBarrier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeNamedBarrier", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b046L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724422");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeOpaque() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeOpaque", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b02eL);
    b.class_(true, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724398");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypePipe() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypePipe", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b03fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724415");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypePipeStorage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypePipeStorage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b043L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724419");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeQueue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeQueue", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b03cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724412");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeReserveId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeReserveId", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b03aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724410");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeReverseId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeReverseId", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b036L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724406");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeSampledImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeSampledImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b02cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724396");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeSampler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeSampler", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b02aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeOpaque
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724394");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpTypeVoid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "OpTypeVoid", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b020L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.TypeAbstract
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01eL);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724384");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Operand", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afc2L);
    b.class_(false, true, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724290");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResult() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Result", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afb7L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724279");
    b.version(3);
    b.aggregate("id", 0x1f77f80cb3b6afb9L).target(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af96L).optional(false).ordered(true).multiple(false).origin("2267553670842724281").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectionHeader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "SelectionHeader", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af80L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.HeaderBlock
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6af77L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724224");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "Type", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.class_(false, true, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724357");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAbstract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeAbstract", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01eL);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724382");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeAggregate", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b016L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724374");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeArray() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeArray", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b013L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724371");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeBoolean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeBoolean", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b004L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724356");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeComposite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeComposite", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b018L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724376");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeFloatingPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeFloatingPoint", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b009L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724361");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeImage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeImage", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01aL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724378");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeInteger", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b007L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724359");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeLogicalointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeLogicalointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b023L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724387");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeMatrix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeMatrix", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b011L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724369");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeNumerical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeNumerical", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b00bL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724363");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeOpaque() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeOpaque", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b026L);
    b.class_(false, true, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724390");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypePhysicalPointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypePhysicalPointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b024L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724388");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeSampler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeSampler", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b01cL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724380");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeScalar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeScalar", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b00dL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724365");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeStructure", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b015L);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724373");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeVector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "TypeVector", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b00fL);
    b.class_(false, false, false);
    // extends: SPIRV.structure.Type
    b.super_(0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b005L);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724367");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariablePointer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "VariablePointer", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6b051L);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724433");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWordCount() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SPIRV", "WordCount", 0x4d403df5e7f84d28L, 0x822bebededfb9fefL, 0x1f77f80cb3b6afcaL);
    b.class_(false, false, false);
    b.origin("r:987726a5-73cd-426e-b007-e45bfc637a4b(SPIRV.structure)/2267553670842724298");
    b.version(3);
    b.property("value", 0x1f77f80cb3b6afcbL).type(PrimitiveTypeId.INTEGER).origin("2267553670842724299").done();
    return b.create();
  }
}
